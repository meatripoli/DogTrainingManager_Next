{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button, Modal, Icon } from 'semantic-ui-react';\nimport { useState, useEffect } from 'react';\nimport RegisterUser from '../components/RegisterUser';\nexport default (function (props) {\n  var response;\n\n  var switchFun = function switchFun(data) {\n    return _regeneratorRuntime.async(function switchFun$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = props.buttonName;\n            _context.next = _context.t0 === 'Remove' ? 3 : _context.t0 === 'New User' ? 8 : 13;\n            break;\n\n          case 3:\n            console.log('delete button');\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(axios.post('/login', data));\n\n          case 6:\n            response = _context.sent;\n            return _context.abrupt(\"break\", 14);\n\n          case 8:\n            console.log('delete button');\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(axios[\"delete\"]('/login', data));\n\n          case 11:\n            response = _context.sent;\n            return _context.abrupt(\"break\", 14);\n\n          case 13:\n            return _context.abrupt(\"break\", 14);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState = useState(props.current ? props.current : {\n    username: '',\n    admin: false,\n    id: 0,\n    password: ''\n  }),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(false),\n      modalstate = _useState2[0],\n      setModalstate = _useState2[1];\n\n  var handleModal = function handleModal(event) {\n    modalstate ? setModalstate(false) : setModalstate(true);\n  };\n\n  var handleInput = function handleInput(event) {\n    var newObj = _defineProperty({}, event.target.name, event.target.value);\n\n    setUser(_objectSpread({}, user, {}, newObj));\n  };\n\n  var handleCheckBox = function handleCheckBox(event, data) {\n    var newObj = _defineProperty({}, data.name, data.checked);\n\n    setUser(_objectSpread({}, user, {}, newObj));\n  };\n\n  var handleButton = function handleButton(event) {\n    return _regeneratorRuntime.async(function handleButton$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            event.preventDefault();\n            console.log(user);\n            setModalstate(false);\n            switchFun(user); //  this clears object\n            //     setLogin({\n            //       user: '',\n            //       password: ''\n            //   });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Modal, {\n    size: \"small\",\n    dimmer: \"blurring\",\n    onClose: handleModal,\n    open: modalstate,\n    trigger: __jsx(Button, {\n      icon: true,\n      color: props.buttonColor,\n      floated: props.buttonLocation,\n      onClick: handleModal,\n      style: {\n        marginBottom: '5px'\n      },\n      data: props.test\n    }, __jsx(\"p\", null, __jsx(Icon, {\n      name: props.icon\n    }))),\n    closeIcon: true\n  }, __jsx(Modal.Header, null, props.title), __jsx(Modal.Content, null, props.modalContent ? props.modalContent : __jsx(RegisterUser, {\n    title: props.buttonName,\n    value: user,\n    inputchange: handleInput,\n    checkboxchange: handleCheckBox\n  })), __jsx(Modal.Actions, null, __jsx(Button, {\n    positive: true,\n    content: \"OK\",\n    onClick: handleButton\n  })));\n});","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/components/ModalLayout.js"],"names":["Button","Modal","Icon","useState","useEffect","RegisterUser","props","response","switchFun","data","buttonName","console","log","axios","post","current","username","admin","id","password","user","setUser","modalstate","setModalstate","handleModal","event","handleInput","newObj","target","name","value","handleCheckBox","checked","handleButton","preventDefault","buttonColor","buttonLocation","marginBottom","test","icon","title","modalContent"],"mappings":"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","sourcesContent":["import { Button, Modal, Icon } from 'semantic-ui-react';\nimport {useState, useEffect} from 'react';\nimport RegisterUser from '../components/RegisterUser';\n\nexport default (props) => {\n  let response;\n  let switchFun = async (data) => {switch (props.buttonName) {\n    case 'Remove':\n      console.log('delete button')\n      response = await axios.post('/login',data)\n      break;\n    case 'New User' :\n      console.log('delete button')\n      response = await axios.delete('/login',data)\n      break;\n  \n    default:\n      break;\n  }}\n  const [user,setUser] = useState(props.current?props.current:{\n    username: '',\n    admin:false,\n    id:0,\n    password: '',\n    \n  });\n  const [modalstate,setModalstate] = useState(false);\n  const handleModal = (event)=> {\n    modalstate?setModalstate(false):setModalstate(true);\n  };\n  const handleInput = (event)=>{\n    let newObj = {[event.target.name]:event.target.value};        \n    setUser({...user,...newObj});\n  };  \n  const handleCheckBox = (event,data) => {\n    let newObj = {[data.name]: data.checked};\n    setUser({...user,...newObj});\n  };\n  const handleButton = async (event)=>{\n    event.preventDefault();\n    console.log(user);\n    setModalstate(false);\n    \n    switchFun(user);\n//  this clears object\n//     setLogin({\n//       user: '',\n//       password: ''\n//   });\n  };\n  return (\n  <Modal size='small' dimmer= 'blurring' onClose={handleModal} open={modalstate} trigger={\n    <Button icon color={props.buttonColor} floated={props.buttonLocation} onClick={handleModal} style={{marginBottom:'5px'}} data={props.test}>\n        <p><Icon name={props.icon} /></p>\n    </Button>\n  } closeIcon>\n    <Modal.Header>{props.title}</Modal.Header>\n    <Modal.Content>\n      {props.modalContent? props.modalContent: <RegisterUser title={props.buttonName} value={user} inputchange={handleInput} checkboxchange={handleCheckBox}/>}\n    </Modal.Content>\n    <Modal.Actions>\n      <Button positive content='OK' onClick={handleButton} />\n    </Modal.Actions>\n  </Modal>\n)};"]},"metadata":{},"sourceType":"module"}