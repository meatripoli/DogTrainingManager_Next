{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport SignInLayout from '../components/SignInLayout';\nimport MyGrid from '../components/MyGrid';\nimport { Form, Button } from 'semantic-ui-react';\nimport UserContext from '../components/UserContext';\nimport { useState, useContext } from 'react';\nimport axios from 'axios';\nimport router from 'next/router';\nexport default (props => {\n  ///const { signIn } = useContext(UserContext);\n  const {\n    0: message,\n    1: setMessage\n  } = useState({\n    color: 'grey',\n    body: 'Not registered yet? Contact your admin at email@example.com to create your account.'\n  });\n  const {\n    0: login,\n    1: setLogin\n  } = useState({\n    user: '',\n    password: ''\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      let response = await axios.post('/login', login);\n      console.log(response.data.data); //signIn(user, id, admin)\n      //need to send the admin flag to users\n\n      router.push({\n        pathname: response.data.redirectUrl,\n        state: response.data.data\n      });\n    } catch (e) {\n      console.log(e);\n\n      if (e.response.status === 401) {\n        let newObj = {\n          body: 'Incorrect user or password',\n          color: 'red'\n        };\n        setMessage(_objectSpread({}, message, {}, newObj));\n      } else {\n        console.log(e.response);\n      }\n    } //done after data is sent for authentication\n    ///this clears object\n\n\n    setLogin({\n      user: '',\n      password: ''\n    });\n  };\n\n  const handleLoginChange = event => {\n    let newObj = {\n      [event.target.name]: event.target.value\n    };\n    setLogin(_objectSpread({}, login, {}, newObj));\n  };\n\n  return __jsx(SignInLayout, null, __jsx(MyGrid, {\n    columnNum: 2,\n    header: \"Login\",\n    body: message.body,\n    color: message.color\n  }, __jsx(Form, {\n    size: \"large\"\n  }, __jsx(Form.Input, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Username\",\n    onChange: handleLoginChange,\n    name: \"user\",\n    type: \"text\",\n    value: login.user\n  }), __jsx(Form.Input, {\n    fluid: true,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    placeholder: \"Password\",\n    type: \"password\",\n    onChange: handleLoginChange,\n    name: \"password\",\n    value: login.password\n  }), __jsx(Button, {\n    type: \"submit\",\n    size: \"large\",\n    onClick: handleSubmit\n  }, \"Log In\"))));\n});","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/pages/login.js"],"names":["SignInLayout","MyGrid","Form","Button","UserContext","useState","useContext","axios","router","props","message","setMessage","color","body","login","setLogin","user","password","handleSubmit","event","preventDefault","response","post","console","log","data","push","pathname","redirectUrl","state","e","status","newObj","handleLoginChange","target","name","value"],"mappings":"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","sourcesContent":["import SignInLayout from '../components/SignInLayout';\nimport MyGrid from '../components/MyGrid';\nimport {Form, Button} from 'semantic-ui-react';\nimport UserContext from '../components/UserContext';\nimport {useState,useContext} from 'react';\nimport axios from 'axios';\nimport router from 'next/router'\n\nexport default (props) => {\n  ///const { signIn } = useContext(UserContext);\n  const [message,setMessage]=useState({\n    color:'grey',\n    body:'Not registered yet? Contact your admin at email@example.com to create your account.'\n  })\n  const [login,setLogin] = useState({\n    user: '',\n    password: ''\n  })\n  const handleSubmit = async (event)=>{\n    event.preventDefault();\n    try{\n      let response = await axios.post('/login',login)\n      console.log(response.data.data);\n      //signIn(user, id, admin)\n      //need to send the admin flag to users\n      router.push({ pathname: response.data.redirectUrl, state: response.data.data})\n    }\n    catch(e){\n      console.log(e)\n      if(e.response.status===401){\n        let newObj = {body: 'Incorrect user or password',color:'red'};\n        setMessage({...message,...newObj})\n      }\n      else{\n        console.log(e.response)\n      }\n    }\n    //done after data is sent for authentication\n    ///this clears object\n    setLogin({\n      user: '',\n      password: ''\n    });\n  };\n\n  const handleLoginChange = (event)=>{\n    let newObj = {[event.target.name]: event.target.value};\n    setLogin({...login,...newObj});\n  }\n\n  return (<SignInLayout>\n    <MyGrid \n        columnNum = {2} \n        header='Login'\n        body={message.body}\n        color={message.color}\n    >\n        <Form size=\"large\">\n            <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                onChange={handleLoginChange}\n                name='user'\n                type='text'\n                value={login.user}\n            />\n            <Form.Input\n                fluid\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                type=\"password\"\n                onChange={handleLoginChange}\n                name='password'\n                value={login.password}\n            />\n            <Button type='submit' size=\"large\" onClick={handleSubmit}>Log In</Button>\n        </Form>\n    </MyGrid>\n  </SignInLayout>);\n};"]},"metadata":{},"sourceType":"module"}