{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Table, Button, Icon } from 'semantic-ui-react';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default (props => {\n  let headerNames; ///need header list\n\n  let headerData = [{\n    name: Username,\n    clickFunction: handleUserClick\n  }, {\n    name: Password,\n    clickFunction: handlePasswordClick\n  }, {\n    name: AdminFlag,\n    clickFunction: handleAdminClick\n  }]; ///need body info\n\n  let tableData = [{\n    Username: 'maria',\n    Password: '******',\n    AdminFlag: 'n',\n    id: 2\n  }, {\n    Username: 'admin',\n    Password: '******',\n    AdminFlag: 'y',\n    id: 1\n  }];\n  return __jsx(Table, {\n    basic: \"very\",\n    striped: true,\n    sortable: true,\n    celled: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, headerData.map(row => {\n    headerNames.push(row.name);\n    return __jsx(Table.HeaderCell, null, row.name);\n  }))), __jsx(Table.Body, null, tableData.map((row, index) => __jsx(Table.Row, {\n    key: row.id\n  }, __jsx(Table.Cell, null, row[header[index]]), __jsx(Table.Cell, null, row[header[index]]), __jsx(Table.Cell, null, row[header[index]], props.children)))));\n});","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/components/TableTemplate.js"],"names":["Table","Button","Icon","ModalLayout","RegisterUser","useEffect","useState","axios","props","headerNames","headerData","name","Username","clickFunction","handleUserClick","Password","handlePasswordClick","AdminFlag","handleAdminClick","tableData","id","map","row","push","index","header","children"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,gBAAgBC,KAAD,IAAS;AACpB,MAAIC,WAAJ,CADoB,CAEpB;;AAEA,MAAIC,UAAU,GAAG,CAAC;AACdC,IAAAA,IAAI,EAAEC,QADQ;AAEdC,IAAAA,aAAa,EAAEC;AAFD,GAAD,EAIjB;AACIH,IAAAA,IAAI,EAAEI,QADV;AAEIF,IAAAA,aAAa,EAAEG;AAFnB,GAJiB,EAQjB;AACIL,IAAAA,IAAI,EAAEM,SADV;AAEIJ,IAAAA,aAAa,EAAEK;AAFnB,GARiB,CAAjB,CAJoB,CAiBpB;;AAEA,MAAIC,SAAS,GAAG,CACZ;AAAEP,IAAAA,QAAQ,EAAE,OAAZ;AAAoBG,IAAAA,QAAQ,EAAE,QAA9B;AAAwCE,IAAAA,SAAS,EAAE,GAAnD;AAAwDG,IAAAA,EAAE,EAAE;AAA5D,GADY,EAEZ;AAAER,IAAAA,QAAQ,EAAE,OAAZ;AAAoBG,IAAAA,QAAQ,EAAE,QAA9B;AAAuCE,IAAAA,SAAS,EAAE,GAAlD;AAAuDG,IAAAA,EAAE,EAAE;AAA3D,GAFY,CAAhB;AAKA,SACI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,MAAb;AAAoB,IAAA,OAAO,MAA3B;AAA4B,IAAA,QAAQ,MAApC;AAAqC,IAAA,MAAM;AAA3C,KACI,MAAC,KAAD,CAAO,MAAP,QACI,MAAC,KAAD,CAAO,GAAP,QACKV,UAAU,CAACW,GAAX,CAAeC,GAAG,IAAE;AACjBb,IAAAA,WAAW,CAACc,IAAZ,CAAiBD,GAAG,CAACX,IAArB;AACA,WAAQ,MAAC,KAAD,CAAO,UAAP,QACHW,GAAG,CAACX,IADD,CAAR;AAGF,GALD,CADL,CADJ,CADJ,EAWI,MAAC,KAAD,CAAO,IAAP,QACCQ,SAAS,CAACE,GAAV,CAAc,CAACC,GAAD,EAAKE,KAAL,KACX,MAAC,KAAD,CAAO,GAAP;AAAW,IAAA,GAAG,EAAEF,GAAG,CAACF;AAApB,KACI,MAAC,KAAD,CAAO,IAAP,QAAaE,GAAG,CAACG,MAAM,CAACD,KAAD,CAAP,CAAhB,CADJ,EAEI,MAAC,KAAD,CAAO,IAAP,QAAaF,GAAG,CAACG,MAAM,CAACD,KAAD,CAAP,CAAhB,CAFJ,EAGI,MAAC,KAAD,CAAO,IAAP,QACKF,GAAG,CAACG,MAAM,CAACD,KAAD,CAAP,CADR,EAEKhB,KAAK,CAACkB,QAFX,CAHJ,CADH,CADD,CAXJ,CADJ;AA0BH,CAlDD","sourcesContent":["import { Table, Button, Icon } from 'semantic-ui-react';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport {useEffect,useState} from 'react';\nimport axios from 'axios';\n\nexport default (props)=>{\n    let headerNames;\n    ///need header list\n    \n    let headerData = [{\n        name: Username,\n        clickFunction: handleUserClick\n    },\n    {\n        name: Password,\n        clickFunction: handlePasswordClick\n    },\n    {\n        name: AdminFlag,\n        clickFunction: handleAdminClick\n    }]\n    \n    ///need body info\n    \n    let tableData = [\n        { Username: 'maria',Password: '******', AdminFlag: 'n' ,id: 2 },\n        { Username: 'admin',Password: '******',AdminFlag: 'y' ,id: 1 }\n    ]\n    \n    return(\n        <Table basic='very' striped sortable celled >\n            <Table.Header>\n                <Table.Row>\n                    {headerData.map(row=>{\n                        headerNames.push(row.name)\n                        return (<Table.HeaderCell>\n                            {row.name}\n                        </Table.HeaderCell>\n                    )})}               \n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {tableData.map((row,index) => (\n                <Table.Row key={row.id}>\n                    <Table.Cell>{row[header[index]]}</Table.Cell>\n                    <Table.Cell>{row[header[index]]}</Table.Cell>\n                    <Table.Cell>\n                        {row[header[index]]}\n                        {props.children}\n                    </Table.Cell>\n                </Table.Row>\n            ))}\n            </Table.Body>\n        </Table>\n    );\n}"]},"metadata":{},"sourceType":"module"}