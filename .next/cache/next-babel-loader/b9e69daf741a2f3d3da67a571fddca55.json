{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport InternalLayout from '../components/InternalLayout';\nimport Table from '../components/Table';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport { Button } from 'semantic-ui-react'; //import { useRouter } from 'next/router';\n\nimport { useState } from 'react';\nexport default (props => {\n  ///figure out how to send the admin flag from the login page\n  //let router = useRouter();\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    username: '',\n    password: '',\n    admin: false\n  });\n\n  const handleInput = event => {\n    let newObj = {\n      [event.target.name]: event.target.value\n    };\n    setUser(_objectSpread({}, user, {}, newObj));\n  };\n\n  const handleCheckBox = (event, data) => {\n    let newObj = {\n      [data.name]: data.checked\n    };\n    setUser(_objectSpread({}, user, {}, newObj));\n    console.log(user);\n  };\n\n  const handleButton = event => {\n    event.preventDefault();\n    console.log(user);\n  }; // const handleSubmit = async (event)=>{\n  //     event.preventDefault();\n  //     let response = await axios.post('/login',login)\n  //     //need to send the admin flag to users\n  //     //router.push({ pathname: response.data.redirectUrl, query: response.data.query.adminflag })\n  //     response.data.success? router.push({ pathname: response.data.redirectUrl}): console.log('incorrect password')\n  //     //done after data is sent for authentication\n  //     ///this clears object\n  //     setLogin({\n  //       user: '',\n  //       password: ''\n  //     });\n  // };\n\n\n  return __jsx(InternalLayout, {\n    adminFlag: \"y\"\n  }, __jsx(ModalLayout, {\n    buttonColor: \"green\",\n    buttonLocation: \"right\",\n    buttonName: \"New User\",\n    icon: \"plus\",\n    title: \"Add a new user\",\n    modalContent: __jsx(RegisterUser, {\n      title: \"Add User\",\n      user: user,\n      inputchange: handleInput,\n      checkboxchange: handleCheckBox\n    }),\n    modalActions: __jsx(Button, {\n      positive: true,\n      content: \"OK\",\n      onClick: handleButton\n    }),\n    user: user\n  }), __jsx(Table, null));\n});","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/pages/users.js"],"names":["InternalLayout","Table","ModalLayout","RegisterUser","Button","useState","props","user","setUser","username","password","admin","handleInput","event","newObj","target","name","value","handleCheckBox","data","checked","console","log","handleButton","preventDefault"],"mappings":";;;;;;;;;AAAA,OAAOA,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,gBAAgBC,KAAD,IAAW;AACtB;AACA;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAMC;AAAN,MAAiBH,QAAQ,CAAC;AAC5BI,IAAAA,QAAQ,EAAE,EADkB;AAE5BC,IAAAA,QAAQ,EAAE,EAFkB;AAG5BC,IAAAA,KAAK,EAAC;AAHsB,GAAD,CAA/B;;AAMA,QAAMC,WAAW,GAAIC,KAAD,IAAS;AACzB,QAAIC,MAAM,GAAG;AAAC,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAoBH,KAAK,CAACE,MAAN,CAAaE;AAAlC,KAAb;AACAT,IAAAA,OAAO,mBAAKD,IAAL,MAAaO,MAAb,EAAP;AACH,GAHD;;AAMA,QAAMI,cAAc,GAAG,CAACL,KAAD,EAAOM,IAAP,KAAgB;AACnC,QAAIL,MAAM,GAAG;AAAC,OAACK,IAAI,CAACH,IAAN,GAAaG,IAAI,CAACC;AAAnB,KAAb;AACAZ,IAAAA,OAAO,mBAAKD,IAAL,MAAaO,MAAb,EAAP;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACH,GAJD;;AAKA,QAAMgB,YAAY,GAAIV,KAAD,IAAS;AAC1BA,IAAAA,KAAK,CAACW,cAAN;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ;AACH,GAHD,CApBsB,CAwBtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SACA,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAC;AAA1B,KACI,MAAC,WAAD;AAAa,IAAA,WAAW,EAAC,OAAzB;AACI,IAAA,cAAc,EAAC,OADnB;AAEI,IAAA,UAAU,EAAC,UAFf;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,KAAK,EAAC,gBAJV;AAKI,IAAA,YAAY,EAAE,MAAC,YAAD;AAAc,MAAA,KAAK,EAAC,UAApB;AAA+B,MAAA,IAAI,EAAEA,IAArC;AAA2C,MAAA,WAAW,EAAEK,WAAxD;AAAqE,MAAA,cAAc,EAAEM;AAArF,MALlB;AAMI,IAAA,YAAY,EAAE,MAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,OAAO,EAAC,IAAzB;AAA8B,MAAA,OAAO,EAAEK;AAAvC,MANlB;AAOI,IAAA,IAAI,EAAEhB;AAPV,IADJ,EAWI,MAAC,KAAD,OAXJ,CADA;AAcH,CAnDD","sourcesContent":["import InternalLayout from '../components/InternalLayout';\nimport Table from '../components/Table';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport { Button } from 'semantic-ui-react';\n//import { useRouter } from 'next/router';\nimport {useState} from 'react';\n\nexport default (props) => {\n    ///figure out how to send the admin flag from the login page\n    //let router = useRouter();\n    const [user,setUser] = useState({\n        username: '',\n        password: '',\n        admin:false\n    });\n\n    const handleInput = (event)=>{\n        let newObj = {[event.target.name]:event.target.value};        \n        setUser({...user,...newObj});\n    }\n\n\n    const handleCheckBox = (event,data) => {\n        let newObj = {[data.name]: data.checked};\n        setUser({...user,...newObj});\n        console.log(user)\n    }\n    const handleButton = (event)=>{\n        event.preventDefault();\n        console.log(user);\n    }\n    // const handleSubmit = async (event)=>{\n    //     event.preventDefault();\n    //     let response = await axios.post('/login',login)\n    //     //need to send the admin flag to users\n    //     //router.push({ pathname: response.data.redirectUrl, query: response.data.query.adminflag })\n    //     response.data.success? router.push({ pathname: response.data.redirectUrl}): console.log('incorrect password')\n    //     //done after data is sent for authentication\n    //     ///this clears object\n    //     setLogin({\n    //       user: '',\n    //       password: ''\n    //     });\n    // };\n    return (\n    <InternalLayout adminFlag='y'>\n        <ModalLayout buttonColor='green'\n            buttonLocation='right' \n            buttonName='New User' \n            icon='plus' \n            title='Add a new user'\n            modalContent={<RegisterUser title='Add User' user={user} inputchange={handleInput} checkboxchange={handleCheckBox}/>}\n            modalActions={<Button positive content='OK' onClick={handleButton} />}\n            user={user}\n        >\n        </ModalLayout>\n        <Table ></Table>\n    </InternalLayout>);\n}"]},"metadata":{},"sourceType":"module"}