{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Table, Button, Icon } from 'semantic-ui-react';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default (props => {\n  let headerNames; ///need header list\n\n  let headerData = [{\n    name: 'Username',\n    clickFunction: 'handleUserClick'\n  }, {\n    name: 'Password',\n    clickFunction: 'handlePasswordClick'\n  }, {\n    name: 'AdminFlag',\n    clickFunction: 'handleAdminClick'\n  }]; ///need body info\n\n  let tableData = [{\n    Username: 'maria',\n    Password: '******',\n    AdminFlag: 'n',\n    id: 2\n  }, {\n    Username: 'admin',\n    Password: '******',\n    AdminFlag: 'y',\n    id: 1\n  }];\n  return __jsx(Table, {\n    basic: \"very\",\n    striped: true,\n    sortable: true,\n    celled: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, headerData.map(row => {\n    return __jsx(Table.HeaderCell, null, row.name);\n  }))), __jsx(Table.Body, null, tableData.map(row => __jsx(Table.Row, {\n    key: row.id\n  }, headerData.map(({\n    name\n  }) => __jsx(Table.Cell, null, row[name]))))));\n});","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/components/TableTemplate.js"],"names":["Table","Button","Icon","ModalLayout","RegisterUser","useEffect","useState","axios","props","headerNames","headerData","name","clickFunction","tableData","Username","Password","AdminFlag","id","map","row"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,gBAAgBC,KAAD,IAAS;AACpB,MAAIC,WAAJ,CADoB,CAEpB;;AAEA,MAAIC,UAAU,GAAG,CAAC;AACdC,IAAAA,IAAI,EAAE,UADQ;AAEdC,IAAAA,aAAa,EAAE;AAFD,GAAD,EAIjB;AACID,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,aAAa,EAAE;AAFnB,GAJiB,EAQjB;AACID,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,aAAa,EAAE;AAFnB,GARiB,CAAjB,CAJoB,CAiBpB;;AAEA,MAAIC,SAAS,GAAG,CACZ;AAAEC,IAAAA,QAAQ,EAAE,OAAZ;AAAoBC,IAAAA,QAAQ,EAAE,QAA9B;AAAwCC,IAAAA,SAAS,EAAE,GAAnD;AAAwDC,IAAAA,EAAE,EAAE;AAA5D,GADY,EAEZ;AAAEH,IAAAA,QAAQ,EAAE,OAAZ;AAAoBC,IAAAA,QAAQ,EAAE,QAA9B;AAAuCC,IAAAA,SAAS,EAAE,GAAlD;AAAuDC,IAAAA,EAAE,EAAE;AAA3D,GAFY,CAAhB;AAKA,SACI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,MAAb;AAAoB,IAAA,OAAO,MAA3B;AAA4B,IAAA,QAAQ,MAApC;AAAqC,IAAA,MAAM;AAA3C,KACI,MAAC,KAAD,CAAO,MAAP,QACI,MAAC,KAAD,CAAO,GAAP,QACKP,UAAU,CAACQ,GAAX,CAAeC,GAAG,IAAE;AACjB,WAAQ,MAAC,KAAD,CAAO,UAAP,QACHA,GAAG,CAACR,IADD,CAAR;AAGF,GAJD,CADL,CADJ,CADJ,EAUI,MAAC,KAAD,CAAO,IAAP,QACCE,SAAS,CAACK,GAAV,CAAeC,GAAD,IACX,MAAC,KAAD,CAAO,GAAP;AAAW,IAAA,GAAG,EAAEA,GAAG,CAACF;AAApB,KACKP,UAAU,CAACQ,GAAX,CAAe,CAAC;AAACP,IAAAA;AAAD,GAAD,KACZ,MAAC,KAAD,CAAO,IAAP,QAAaQ,GAAG,CAACR,IAAD,CAAhB,CADH,CADL,CADH,CADD,CAVJ,CADJ;AAsBH,CA9CD","sourcesContent":["import { Table, Button, Icon } from 'semantic-ui-react';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport {useEffect,useState} from 'react';\nimport axios from 'axios';\n\nexport default (props)=>{\n    let headerNames;\n    ///need header list\n    \n    let headerData = [{\n        name: 'Username',\n        clickFunction: 'handleUserClick'\n    },\n    {\n        name: 'Password',\n        clickFunction: 'handlePasswordClick'\n    },\n    {\n        name: 'AdminFlag',\n        clickFunction: 'handleAdminClick'\n    }]\n    \n    ///need body info\n    \n    let tableData = [\n        { Username: 'maria',Password: '******', AdminFlag: 'n' ,id: 2 },\n        { Username: 'admin',Password: '******',AdminFlag: 'y' ,id: 1 }\n    ]\n    \n    return(\n        <Table basic='very' striped sortable celled >\n            <Table.Header>\n                <Table.Row>\n                    {headerData.map(row=>{\n                        return (<Table.HeaderCell>\n                            {row.name}\n                        </Table.HeaderCell>\n                    )})}               \n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {tableData.map((row) => (\n                <Table.Row key={row.id}>\n                    {headerData.map(({name})=>(\n                        <Table.Cell>{row[name]}</Table.Cell>\n                    ))}\n                </Table.Row>\n            ))}\n            </Table.Body>\n        </Table>\n    );\n}"]},"metadata":{},"sourceType":"module"}