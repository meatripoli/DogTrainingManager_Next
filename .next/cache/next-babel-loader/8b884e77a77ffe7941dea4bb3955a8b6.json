{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Table, Button, Icon } from 'semantic-ui-react';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nvar ModalContent = function ModalContent(props) {\n  return __jsx(\"p\", null, props.text);\n};\n\nvar ModalAction = function ModalAction(props) {\n  return __jsx(Button, {\n    positive: true,\n    content: \"OK\",\n    onClick: props.handleButton\n  });\n};\n\nexport default (function (props) {\n  var loadingData = [{\n    id: 0,\n    user: 'Loading',\n    adminflag: 'Loading',\n    password: 'Loading'\n  }];\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1]; ///when first loading pull all the users from database and display them\n\n\n  var tableData = data.length === 0 ? loadingData : data;\n  useEffect(function () {\n    axios.get('/api/users').then(function (res) {\n      setData(res.data);\n    })[\"catch\"](function (err) {\n      return console.log('Error:', err);\n    });\n  }, []); //to edit user info click on name and a pop up will ask you \n\n  return __jsx(Table, {\n    basic: \"very\",\n    striped: true,\n    sortable: true,\n    celled: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Username\"), __jsx(Table.HeaderCell, null, \"Password\"), __jsx(Table.HeaderCell, null, \"Admin\"))), __jsx(Table.Body, null, tableData.map(function (_ref) {\n    var user = _ref.user,\n        adminflag = _ref.adminflag,\n        id = _ref.id;\n    return __jsx(Table.Row, {\n      key: id\n    }, __jsx(Table.Cell, null, user), __jsx(Table.Cell, null, \"******\"), __jsx(Table.Cell, null, adminflag, __jsx(ModalLayout, {\n      modalstate: props.tablemodalstate,\n      handleModal: props.tablehandleModal,\n      buttonLocation: \"right\",\n      buttonName: \"Edit\",\n      icon: \"pencil alternate\",\n      title: \"Edit user\",\n      modalContent: __jsx(RegisterUser, {\n        title: \"Edit user\",\n        user: props.tableuser,\n        inputchange: props.tableinputchange,\n        checkboxchange: props.tablecheckboxchange\n      }),\n      modalActions: __jsx(ModalAction, {\n        handleButton: props.tablehandleButton\n      })\n    }), __jsx(ModalLayout, {\n      deletemodalstate: props.tablemodalstate,\n      deletehandleModal: props.tablehandleModal,\n      buttonLocation: \"right\",\n      buttonName: \"Remove\",\n      icon: \"trash\",\n      title: \"Delete user\",\n      modalContent: __jsx(ModalContent, {\n        text: \"Are you sure you want to delete this account?\"\n      }),\n      modalActions: __jsx(ModalAction, {\n        deletehandleButton: props.tablehandleButton\n      })\n    })));\n  })));\n});\n/*\ntablemodalstate={modalstate}\n            tablehandleModal={handleModal}\n            tablehandleButton={handleButton}\n            tableinputchange={handleInput}\n            tablecheckboxchange={handleCheckBox}\n            tableuser={user}\n*/","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/components/Table.js"],"names":["Table","Button","Icon","ModalLayout","RegisterUser","useEffect","useState","axios","ModalContent","props","text","ModalAction","handleButton","loadingData","id","user","adminflag","password","data","setData","tableData","length","get","then","res","err","console","log","map","tablemodalstate","tablehandleModal","tableuser","tableinputchange","tablecheckboxchange","tablehandleButton"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;AAAA,SAAW,iBAAIA,KAAK,CAACC,IAAV,CAAX;AAAA,CAArB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACF,KAAD;AAAA,SAAW,MAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAiB,IAAA,OAAO,EAAC,IAAzB;AAA8B,IAAA,OAAO,EAAEA,KAAK,CAACG;AAA7C,IAAX;AAAA,CAApB;;AAEA,gBAAe,UAACH,KAAD,EAAS;AACpB,MAAMI,WAAW,GAAE,CAAC;AAChBC,IAAAA,EAAE,EAAC,CADa;AAEhBC,IAAAA,IAAI,EAAC,SAFW;AAGhBC,IAAAA,SAAS,EAAC,SAHM;AAIhBC,IAAAA,QAAQ,EAAC;AAJO,GAAD,CAAnB;;AADoB,kBAOGX,QAAQ,CAAC,EAAD,CAPX;AAAA,MAObY,IAPa;AAAA,MAORC,OAPQ,iBAQpB;;;AACA,MAAMC,SAAS,GAAGF,IAAI,CAACG,MAAL,KAAc,CAAd,GAAiBR,WAAjB,GAA6BK,IAA/C;AACAb,EAAAA,SAAS,CAAC,YAAM;AACZE,IAAAA,KAAK,CAACe,GAAN,CAAU,YAAV,EACCC,IADD,CACM,UAAAC,GAAG,EAAI;AACTL,MAAAA,OAAO,CAACK,GAAG,CAACN,IAAL,CAAP;AACH,KAHD,WAIO,UAAAO,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,GAArB,CAAJ;AAAA,KAJV;AAKH,GANQ,EAMP,EANO,CAAT,CAVoB,CAiBpB;;AACA,SACI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,MAAb;AAAoB,IAAA,OAAO,MAA3B;AAA4B,IAAA,QAAQ,MAApC;AAAqC,IAAA,MAAM;AAA3C,KACI,MAAC,KAAD,CAAO,MAAP,QACI,MAAC,KAAD,CAAO,GAAP,QACI,MAAC,KAAD,CAAO,UAAP,mBADJ,EAOI,MAAC,KAAD,CAAO,UAAP,mBAPJ,EAaI,MAAC,KAAD,CAAO,UAAP,gBAbJ,CADJ,CADJ,EAwBI,MAAC,KAAD,CAAO,IAAP,QACCL,SAAS,CAACQ,GAAV,CAAc;AAAA,QAAGb,IAAH,QAAGA,IAAH;AAAA,QAAQC,SAAR,QAAQA,SAAR;AAAA,QAAkBF,EAAlB,QAAkBA,EAAlB;AAAA,WACX,MAAC,KAAD,CAAO,GAAP;AAAW,MAAA,GAAG,EAAEA;AAAhB,OACI,MAAC,KAAD,CAAO,IAAP,QAAaC,IAAb,CADJ,EAEI,MAAC,KAAD,CAAO,IAAP,iBAFJ,EAGI,MAAC,KAAD,CAAO,IAAP,QACKC,SADL,EAEI,MAAC,WAAD;AACI,MAAA,UAAU,EAAEP,KAAK,CAACoB,eADtB;AAEI,MAAA,WAAW,EAAEpB,KAAK,CAACqB,gBAFvB;AAGI,MAAA,cAAc,EAAC,OAHnB;AAII,MAAA,UAAU,EAAC,MAJf;AAKI,MAAA,IAAI,EAAC,kBALT;AAMI,MAAA,KAAK,EAAC,WANV;AAOI,MAAA,YAAY,EAAE,MAAC,YAAD;AAAc,QAAA,KAAK,EAAC,WAApB;AAAgC,QAAA,IAAI,EAAErB,KAAK,CAACsB,SAA5C;AAAuD,QAAA,WAAW,EAAEtB,KAAK,CAACuB,gBAA1E;AAA4F,QAAA,cAAc,EAAEvB,KAAK,CAACwB;AAAlH,QAPlB;AAQI,MAAA,YAAY,EAAE,MAAC,WAAD;AAAa,QAAA,YAAY,EAAExB,KAAK,CAACyB;AAAjC;AARlB,MAFJ,EAaI,MAAC,WAAD;AACI,MAAA,gBAAgB,EAAEzB,KAAK,CAACoB,eAD5B;AAEI,MAAA,iBAAiB,EAAEpB,KAAK,CAACqB,gBAF7B;AAGI,MAAA,cAAc,EAAC,OAHnB;AAII,MAAA,UAAU,EAAC,QAJf;AAKI,MAAA,IAAI,EAAC,OALT;AAMI,MAAA,KAAK,EAAC,aANV;AAOI,MAAA,YAAY,EAAE,MAAC,YAAD;AAAc,QAAA,IAAI,EAAC;AAAnB,QAPlB;AAQI,MAAA,YAAY,EAAE,MAAC,WAAD;AAAa,QAAA,kBAAkB,EAAErB,KAAK,CAACyB;AAAvC;AARlB,MAbJ,CAHJ,CADW;AAAA,GAAd,CADD,CAxBJ,CADJ;AA4DH,CA9ED;AAgFA","sourcesContent":["import { Table, Button, Icon } from 'semantic-ui-react';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport {useEffect,useState} from 'react';\nimport axios from 'axios';\n\nconst ModalContent = (props) => <p>{props.text}</p>;\nconst ModalAction = (props) => <Button positive content='OK' onClick={props.handleButton}/>\n\nexport default (props)=>{\n    const loadingData =[{\n        id:0,\n        user:'Loading',\n        adminflag:'Loading',\n        password:'Loading'\n    }]\n    const [data,setData] = useState([]);\n    ///when first loading pull all the users from database and display them\n    const tableData = data.length===0? loadingData:data\n    useEffect(() => {\n        axios.get('/api/users')\n        .then(res => {\n            setData(res.data);\n        })\n        .catch(err => console.log('Error:',err))\n    },[]);\n    //to edit user info click on name and a pop up will ask you \n    return(\n        <Table basic='very' striped sortable celled >\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell\n                    //sorted={column === 'name' ? direction : null}\n                    //onClick={}\n                    >\n                    Username\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                    //sorted={column === 'age' ? direction : null}\n                    //onClick={}\n                    >\n                    Password\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                    //sorted={column === 'gender' ? direction : null}\n                    //onClick={}\n                    >\n                    Admin\n                    </Table.HeaderCell>\n                    \n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {tableData.map(({ user,adminflag,id }) => (\n                <Table.Row key={id}>\n                    <Table.Cell>{user}</Table.Cell>\n                    <Table.Cell>******</Table.Cell>\n                    <Table.Cell>\n                        {adminflag}\n                        <ModalLayout \n                            modalstate={props.tablemodalstate}\n                            handleModal={props.tablehandleModal}\n                            buttonLocation='right' \n                            buttonName='Edit' \n                            icon='pencil alternate' \n                            title='Edit user'\n                            modalContent={<RegisterUser title='Edit user' user={props.tableuser} inputchange={props.tableinputchange} checkboxchange={props.tablecheckboxchange}/>}\n                            modalActions={<ModalAction handleButton={props.tablehandleButton} />}\n                        >\n                        </ModalLayout>\n                        <ModalLayout \n                            deletemodalstate={props.tablemodalstate}\n                            deletehandleModal={props.tablehandleModal}\n                            buttonLocation='right' \n                            buttonName='Remove' \n                            icon='trash' \n                            title='Delete user'\n                            modalContent={<ModalContent text='Are you sure you want to delete this account?'/>}\n                            modalActions={<ModalAction deletehandleButton={props.tablehandleButton}/>}\n                        >\n                        </ModalLayout>\n                    </Table.Cell>\n                </Table.Row>\n            ))}\n            </Table.Body>\n        </Table>\n    );\n}\n\n/*\ntablemodalstate={modalstate}\n            tablehandleModal={handleModal}\n            tablehandleButton={handleButton}\n            tableinputchange={handleInput}\n            tablecheckboxchange={handleCheckBox}\n            tableuser={user}\n*/"]},"metadata":{},"sourceType":"module"}