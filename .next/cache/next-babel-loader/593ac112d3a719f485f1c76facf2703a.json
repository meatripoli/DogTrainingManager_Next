{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Table, Button, Icon } from 'semantic-ui-react';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst ModalContent = props => __jsx(\"p\", null, props.text);\n\nconst ModalAction = props => __jsx(Button, {\n  positive: true,\n  content: \"OK\",\n  onClick: props.handleButton\n});\n\nexport default (props => {\n  const loadingData = [{\n    id: 0,\n    user: 'Loading',\n    adminflag: 'Loading',\n    password: 'Loading'\n  }];\n  const {\n    0: data,\n    1: setData\n  } = useState([]); ///when first loading pull all the users from database and display them\n\n  const tableData = data.length === 0 ? loadingData : data;\n  useEffect(() => {\n    axios.get('/api/users').then(res => {\n      setData(res.data);\n    }).catch(err => console.log('Error:', err));\n  }, []); //to edit user info click on name and a pop up will ask you \n\n  return __jsx(Table, {\n    basic: \"very\",\n    striped: true,\n    sortable: true,\n    celled: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Username\"), __jsx(Table.HeaderCell, null, \"Password\"), __jsx(Table.HeaderCell, null, \"Admin\"))), __jsx(Table.Body, null, tableData.map(({\n    user,\n    adminflag,\n    id\n  }) => __jsx(Table.Row, {\n    key: id\n  }, __jsx(Table.Cell, null, user), __jsx(Table.Cell, null, \"******\"), __jsx(Table.Cell, null, adminflag, __jsx(ModalLayout, {\n    buttonLocation: \"right\",\n    buttonName: \"Edit\",\n    icon: \"pencil alternate\",\n    title: \"Edit user\",\n    modalActions: __jsx(ModalAction, null),\n    current: {\n      user: user,\n      adminflag: adminflag,\n      id: id\n    }\n  }), __jsx(ModalLayout, {\n    buttonLocation: \"right\",\n    buttonName: \"Remove\",\n    icon: \"trash\",\n    title: \"Delete user\",\n    modalContent: __jsx(ModalContent, {\n      text: \"Are you sure you want to delete this account?\"\n    }),\n    modalActions: __jsx(ModalAction, null)\n  }))))));\n});\n/*\ntablemodalstate={modalstate}\n            tablehandleModal={handleModal}\n            tablehandleButton={handleButton}\n            tableinputchange={handleInput}\n            tablecheckboxchange={handleCheckBox}\n            tableuser={user}\n*/","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/components/Table.js"],"names":["Table","Button","Icon","ModalLayout","RegisterUser","useEffect","useState","axios","ModalContent","props","text","ModalAction","handleButton","loadingData","id","user","adminflag","password","data","setData","tableData","length","get","then","res","catch","err","console","log","map"],"mappings":"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","sourcesContent":["import { Table, Button, Icon } from 'semantic-ui-react';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport {useEffect,useState} from 'react';\nimport axios from 'axios';\n\nconst ModalContent = (props) => <p>{props.text}</p>;\nconst ModalAction = (props) => <Button positive content='OK' onClick={props.handleButton}/>\n\nexport default (props)=>{\n    const loadingData =[{\n        id:0,\n        user:'Loading',\n        adminflag:'Loading',\n        password:'Loading'\n    }]\n    const [data,setData] = useState([]);\n    ///when first loading pull all the users from database and display them\n    const tableData = data.length===0? loadingData:data\n    useEffect(() => {\n        axios.get('/api/users')\n        .then(res => {\n            setData(res.data);\n        })\n        .catch(err => console.log('Error:',err))\n    },[]);\n    //to edit user info click on name and a pop up will ask you \n    return(\n        <Table basic='very' striped sortable celled >\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell\n                    //sorted={column === 'name' ? direction : null}\n                    //onClick={}\n                    >\n                    Username\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                    //sorted={column === 'age' ? direction : null}\n                    //onClick={}\n                    >\n                    Password\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                    //sorted={column === 'gender' ? direction : null}\n                    //onClick={}\n                    >\n                    Admin\n                    </Table.HeaderCell>\n                    \n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {tableData.map(({ user,adminflag,id }) => (\n                <Table.Row key={id} >\n                    <Table.Cell>{user}</Table.Cell>\n                    <Table.Cell>******</Table.Cell>\n                    <Table.Cell>\n                        {adminflag}\n                        <ModalLayout \n                            buttonLocation='right' \n                            buttonName='Edit' \n                            icon='pencil alternate' \n                            title='Edit user'\n                            modalActions={<ModalAction />}\n                            current={{user:user,adminflag:adminflag,id:id}}\n                        >\n                        </ModalLayout>\n                        <ModalLayout \n                            buttonLocation='right' \n                            buttonName='Remove' \n                            icon='trash' \n                            title='Delete user'\n                            modalContent={<ModalContent text='Are you sure you want to delete this account?'/>}\n                            modalActions={<ModalAction />}\n                        >\n                        </ModalLayout>\n                    </Table.Cell>\n                </Table.Row>\n            ))}\n            </Table.Body>\n        </Table>\n    );\n}\n\n/*\ntablemodalstate={modalstate}\n            tablehandleModal={handleModal}\n            tablehandleButton={handleButton}\n            tableinputchange={handleInput}\n            tablecheckboxchange={handleCheckBox}\n            tableuser={user}\n*/"]},"metadata":{},"sourceType":"module"}