{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport InternalLayout from '../components/InternalLayout';\nimport TableTemplate from '../components/TableTemplate';\nimport ModalLayout from '../components/ModalLayout';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nexport default (function (props) {\n  var loadingData = [{\n    id: 0,\n    user: 'Loading',\n    adminflag: 'Loading',\n    password: 'Loading'\n  }];\n\n  var _useState = useState(loadingData),\n      data = _useState[0],\n      setData = _useState[1]; ///when first loading pull all the users from database and display them\n  //const tableData = data.length===0? loadingData:data\n\n\n  useEffect(function () {\n    axios.get('/api/users').then(function (res) {\n      setData(res.data.map(function (row) {\n        return {\n          user: row.user,\n          password: '******',\n          adminflag: row.adminflag ? 'y' : 'n',\n          id: row.id\n        };\n      }));\n    })[\"catch\"](function (err) {\n      return console.log('Error:', err);\n    });\n  }, []); //to edit user info click on name and a pop up will ask you \n\n  var mymodal = function mymodal(text, rowdata) {\n    return __jsx(React.Fragment, null, text, __jsx(ModalLayout, {\n      buttonLocation: \"right\",\n      buttonName: \"Remove\",\n      icon: \"trash\",\n      title: \"Delete user\",\n      modalContent: __jsx(\"p\", null, \"Are you sure you want to delete \".concat(rowdata.user, \" account?\")),\n      current: rowdata\n    }));\n  };\n\n  var headerData = [{\n    tableHeaderName: 'user',\n    name: 'Username',\n    clickFunction: 'handleUserClick',\n    haschildren: false,\n    children: ''\n  }, {\n    tableHeaderName: 'password',\n    name: 'Password',\n    clickFunction: 'handlePasswordClick',\n    haschildren: false,\n    children: ''\n  }, {\n    tableHeaderName: 'adminflag',\n    name: 'AdminFlag',\n    clickFunction: 'handleAdminClick',\n    haschildren: true,\n    children: mymodal\n  }];\n  console.log('inside /dogs', props);\n  return __jsx(TableTemplate, {\n    header: headerData,\n    table: data\n  });\n}); // import { Table, Button, Icon } from 'semantic-ui-react';\n// import ModalLayout from '../components/ModalLayout';\n// import RegisterUser from '../components/RegisterUser';\n// import {useEffect,useState} from 'react';\n// import axios from 'axios';\n// const ModalContent = (props) => <p>{props.text}</p>;\n// const ModalAction = (props) => <Button positive content='OK' onClick={props.handleButton}/>\n// export default (props)=>{\n//     const loadingData =[{\n//         id:0,\n//         user:'Loading',\n//         adminflag:'Loading',\n//         password:'Loading'\n//     }]\n//     const [data,setData] = useState([]);\n//     ///when first loading pull all the users from database and display them\n//     const tableData = data.length===0? loadingData:data\n//     useEffect(() => {\n//         axios.get('/api/users')\n//         .then(res => {\n//             setData(res.data);\n//         })\n//         .catch(err => console.log('Error:',err))\n//     },[]);\n//     //to edit user info click on name and a pop up will ask you \n//     return(\n//         <Table basic='very' striped sortable celled >\n//             <Table.Header>\n//                 <Table.Row>\n//                     <Table.HeaderCell\n//                     //sorted={column === 'name' ? direction : null}\n//                     //onClick={}\n//                     >\n//                     Username\n//                     </Table.HeaderCell>\n//                     <Table.HeaderCell\n//                     //sorted={column === 'age' ? direction : null}\n//                     //onClick={}\n//                     >\n//                     Password\n//                     </Table.HeaderCell>\n//                     <Table.HeaderCell\n//                     //sorted={column === 'gender' ? direction : null}\n//                     //onClick={}\n//                     >\n//                     Admin\n//                     </Table.HeaderCell>\n//                 </Table.Row>\n//             </Table.Header>\n//             <Table.Body>\n//             {tableData.map(({ user,adminflag,id }) => (\n//                 <Table.Row key={id} >\n//                     <Table.Cell>{user}</Table.Cell>\n//                     <Table.Cell>******</Table.Cell>\n//                     <Table.Cell>\n//                         {adminflag===true?'yes':'no'}\n//                         {/* <ModalLayout \n//                             buttonLocation='right' \n//                             buttonName='Edit' \n//                             icon='pencil alternate' \n//                             title='Edit user'\n//                             modalActions={<ModalAction />}\n//                             current={{user:user,adminflag:adminflag,id:id}}\n//                         >\n//                         </ModalLayout> */}\n//                         <ModalLayout \n//                             buttonLocation='right' \n//                             buttonName='Remove' \n//                             icon='trash' \n//                             title='Delete user'\n//                             modalContent={<ModalContent text={`Are you sure you want to delete ${user} account?`}/>}\n//                             modalActions={<ModalAction />}\n//                             current={{user:user,adminflag:adminflag,id:id,password:''}}\n//                         >\n//                         </ModalLayout>\n//                     </Table.Cell>\n//                 </Table.Row>\n//             ))}\n//             </Table.Body>\n//         </Table>\n//     );\n// }","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/components/UsersTable.js"],"names":["InternalLayout","TableTemplate","ModalLayout","useEffect","useState","axios","props","loadingData","id","user","adminflag","password","data","setData","get","then","res","map","row","err","console","log","mymodal","text","rowdata","headerData","tableHeaderName","name","clickFunction","haschildren","children"],"mappings":"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","sourcesContent":["import InternalLayout from '../components/InternalLayout';\nimport TableTemplate from '../components/TableTemplate';\nimport ModalLayout from '../components/ModalLayout';\nimport {useEffect,useState} from 'react';\nimport axios from 'axios';\n\nexport default (props) => {\n    const loadingData =[{\n        id:0,\n        user:'Loading',\n        adminflag:'Loading',\n        password:'Loading'\n    }]\n    const [data,setData] = useState(loadingData);\n    ///when first loading pull all the users from database and display them\n    //const tableData = data.length===0? loadingData:data\n    useEffect(() => {\n        axios.get('/api/users')\n        .then(res => {\n            setData(res.data.map(row=>({ user: row.user,password: '******', adminflag: row.adminflag?'y':'n' ,id: row.id })));\n        })\n        .catch(err => console.log('Error:',err))\n    },[]);\n    //to edit user info click on name and a pop up will ask you \n    const mymodal = (text,rowdata) => <>\n        {text}\n        <ModalLayout \n            buttonLocation='right' \n            buttonName='Remove' \n            icon='trash' \n            title='Delete user'\n            modalContent={<p>{`Are you sure you want to delete ${rowdata.user} account?`}</p>}\n            current={rowdata}\n        /></>\n    let headerData = [{\n        tableHeaderName:'user',\n        name: 'Username',\n        clickFunction: 'handleUserClick',\n        haschildren: false,\n        children: ''\n    },\n    {\n        tableHeaderName:'password',\n        name: 'Password',\n        clickFunction: 'handlePasswordClick',\n        haschildren: false,\n        children: ''\n    },\n    {\n        tableHeaderName:'adminflag',\n        name: 'AdminFlag',\n        clickFunction: 'handleAdminClick',\n        haschildren: true,\n        children: mymodal\n    }]\n    console.log('inside /dogs',props)\n    return <TableTemplate header={headerData} table={data} />\n}\n// import { Table, Button, Icon } from 'semantic-ui-react';\n// import ModalLayout from '../components/ModalLayout';\n// import RegisterUser from '../components/RegisterUser';\n// import {useEffect,useState} from 'react';\n// import axios from 'axios';\n\n// const ModalContent = (props) => <p>{props.text}</p>;\n// const ModalAction = (props) => <Button positive content='OK' onClick={props.handleButton}/>\n\n// export default (props)=>{\n//     const loadingData =[{\n//         id:0,\n//         user:'Loading',\n//         adminflag:'Loading',\n//         password:'Loading'\n//     }]\n//     const [data,setData] = useState([]);\n//     ///when first loading pull all the users from database and display them\n//     const tableData = data.length===0? loadingData:data\n//     useEffect(() => {\n//         axios.get('/api/users')\n//         .then(res => {\n//             setData(res.data);\n//         })\n//         .catch(err => console.log('Error:',err))\n//     },[]);\n//     //to edit user info click on name and a pop up will ask you \n//     return(\n//         <Table basic='very' striped sortable celled >\n//             <Table.Header>\n//                 <Table.Row>\n//                     <Table.HeaderCell\n//                     //sorted={column === 'name' ? direction : null}\n//                     //onClick={}\n//                     >\n//                     Username\n//                     </Table.HeaderCell>\n//                     <Table.HeaderCell\n//                     //sorted={column === 'age' ? direction : null}\n//                     //onClick={}\n//                     >\n//                     Password\n//                     </Table.HeaderCell>\n//                     <Table.HeaderCell\n//                     //sorted={column === 'gender' ? direction : null}\n//                     //onClick={}\n//                     >\n//                     Admin\n//                     </Table.HeaderCell>\n                    \n//                 </Table.Row>\n//             </Table.Header>\n//             <Table.Body>\n//             {tableData.map(({ user,adminflag,id }) => (\n//                 <Table.Row key={id} >\n//                     <Table.Cell>{user}</Table.Cell>\n//                     <Table.Cell>******</Table.Cell>\n//                     <Table.Cell>\n//                         {adminflag===true?'yes':'no'}\n//                         {/* <ModalLayout \n//                             buttonLocation='right' \n//                             buttonName='Edit' \n//                             icon='pencil alternate' \n//                             title='Edit user'\n//                             modalActions={<ModalAction />}\n//                             current={{user:user,adminflag:adminflag,id:id}}\n//                         >\n//                         </ModalLayout> */}\n//                         <ModalLayout \n//                             buttonLocation='right' \n//                             buttonName='Remove' \n//                             icon='trash' \n//                             title='Delete user'\n//                             modalContent={<ModalContent text={`Are you sure you want to delete ${user} account?`}/>}\n//                             modalActions={<ModalAction />}\n//                             current={{user:user,adminflag:adminflag,id:id,password:''}}\n//                         >\n//                         </ModalLayout>\n//                     </Table.Cell>\n//                 </Table.Row>\n//             ))}\n//             </Table.Body>\n//         </Table>\n//     );\n// }"]},"metadata":{},"sourceType":"module"}