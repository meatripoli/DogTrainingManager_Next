{"version":3,"file":"static/webpack/static/development/pages/dogprofile/[name].js.6d5b1c90ed0d7fcfb2cc.hot-update.js","sources":["webpack:///./components/Profile.js"],"sourcesContent":["import { Segment,Grid,Image,List,Form,Header } from 'semantic-ui-react';\nimport {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst programOptions = [\n    { key: 'o', text: '', value: 'other' },\n    { key: 'b', text: 'Boarding', value: 'boarding' },\n    { key: 'bt', text: 'Board & Train', value: 'board and train' },    \n    { key: 't', text: 'Train', value: 'train' },\n    { key: 'g', text: 'Going Home', value: 'gohome' },\n];\nconst heelOptions = [\n    { key: 'l', text: 'Left', value: 'left' },\n    { key: 'r', text: 'Right', value: 'right' },\n];\nexport default (props) => {\n    const [data,setData]=useState({})\n    useEffect(()=>{\n        setData({\n            id: props.data.id,\n            heel: props.data.heel,\n            program: props.data.program,\n            dateofIntake: props.data.dateofIntake,\n        })\n    },[])\n    \n    const handleInput = (event)=>{\n        let newObj = {[event.target.name]:event.target.value};\n        setData({...data,...newObj});\n   }\n    const handleDropdown = (event,item)=>{\n        let newObj = {[item.name]: item.value};\n        setData({...data,...newObj});\n    }\n    const handleClick = async (event)=>{\n        event.preventDefault();\n        console.log('submit following info',data);\n        ///we want to update table\n        axios.put('/api/dogprofile/'+props.data.id, data)\n        .then(res => {    \n            res.status===200?alert(\"Intake Infosaved successfully\"):console.log(res);\n        })\n        .catch(err => console.log('Error:',err))\n    }\n    return (<Grid divided='vertically'>\n            <Grid.Row columns={2}>\n                <Grid.Column width={6}>\n                    <Image src='https://www.pngkey.com/png/detail/204-2046914_diane-vulcan-shared-rhodesian-ridgeback.png' size='medium' circular />\n                </Grid.Column>\n                <Grid.Column width={10}>\n                    <Header as='h1'>Basic Info</Header>\n                    <List bulleted>\n                        <List.Item>Name: {props.data.dogName}</List.Item>\n                        <List.Item>Age: {props.data.dogAge}</List.Item>\n                        <List.Item>Breed: {props.data.dogBreed}</List.Item>\n                        <List.Item>Gender: {props.data.dogGender}</List.Item>\n                        <List.Item >\n                            Owner Contact Information:\n                            <List.List>\n                                <List.Item>Name: {`${props.data.ownerFirstName} ${props.data.ownerLastName}`}</List.Item>\n                                <List.Item>Phone: {props.data.ownerCellPhone}</List.Item>\n                                <List.Item>Email: {props.data.ownerEmail}</List.Item>\n                            </List.List>\n                        </List.Item>\n                        <List.Item>\n                            Food Information:\n                            <List.List>\n                                <List.Item>Name: {props.data.foodName}</List.Item>\n                                <List.Item>Amount: {props.data.foodAmount}</List.Item>\n                                <List.Item>Time: {props.data.foodTime}</List.Item>\n                            </List.List>\n                        </List.Item>\n                        <List.Item>Fixed: {props.data.fixed}</List.Item>\n                        <List.Item>\n                            Veterinarian Information:\n                            <List.List>\n                                <List.Item>Name: {props.data.vetName}</List.Item>\n                                <List.Item>Phone: {props.data.vetPhone}</List.Item>\n                            </List.List>\n                        </List.Item>\n                        <List.Item>Allergies: {props.data.allegires}</List.Item>\n                        <List.Item>Medication: {props.data.medication}</List.Item>\n                    </List>\n                </Grid.Column>\n            </Grid.Row> \n            <Grid.Row stretched columns={2}>\n                <Grid.Column width={8}>\n                    <Segment>\n                        <Header as='h3' >Issues</Header>\n                        <List bulleted> \n                            {props.data.issueDetails.map((issue,index)=>{\n                                issue?<List.Item>{issueHeader[i]}</List.Item>:''\n                            })}\n                        </List>\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column width={8}>\n                    <Segment>                        \n                        <Header as='h3' >Extra Comments</Header>\n                        <p>Extra Issues: {props.data.additionalIssues}</p>\n                        <p>Owner Notes: {props.data.extraNotes===''?props.data.extraNotes:'None Provided'}</p>\n                    </Segment>\n                    <Segment>\n                        <Header as='h3' >Known Commands</Header>\n                        <p>{props.data.commands}</p>\n                    </Segment>\n                </Grid.Column>\n            </Grid.Row>\n            \n            <Grid.Row stretched columns={1}>\n                <Header as='h1' style={{marginLeft:'10px'}}>Intake Info (provided by trainer)</Header>\n                <Grid.Column>\n                    <Form>\n                        <Form.Group widths='equal'>\n                            <Form.Select\n                                fluid\n                                label = 'Heel'\n                                options={heelOptions}\n                                placeholder = 'Left'\n                                value = {data.heel}\n                                onChange = {handleDropdown}\n                                name= 'heel'\n                            />\n                            <Form.Select\n                                fluid\n                                label = 'Program'\n                                options={programOptions}\n                                placeholder = 'Program'\n                                onChange = {handleDropdown}\n                                value = {data.program}\n                                name= 'program'\n                            />\n                            <Form.Input \n                                fluid \n                                label='Intake Date' \n                                name='dateofIntake' \n                                type='date' \n                                value = {data.intakeDate}\n                                onChange = {handleInput}\n                            />\n                        </Form.Group>\n                        <Form.Button positive onClick={handleClick}>Save</Form.Button>\n                    </Form>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row></Grid.Row>\n        </Grid>\n    );\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAkCA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAIA;AAAA;AAEA;AAAA;AAKA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AAAA;AAOA;;;;A","sourceRoot":""}