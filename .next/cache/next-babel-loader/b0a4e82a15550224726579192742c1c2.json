{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport InternalLayout from '../components/InternalLayout';\nimport Table from '../components/Table';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport { Button } from 'semantic-ui-react'; //import { useRouter } from 'next/router';\n\nimport { useState } from 'react';\nexport default (function (props) {\n  ///figure out how to send the admin flag from the login page\n  //let router = useRouter();\n  var _useState = useState({\n    username: '',\n    password: '',\n    admin: false\n  }),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(false),\n      modalstate = _useState2[0],\n      setModalstate = _useState2[1];\n\n  var handleModal = function handleModal() {\n    modalstate ? setModalstate(false) : setModalstate(true);\n    console.log(modalstate);\n  };\n\n  var handleInput = function handleInput(event) {\n    var newObj = _defineProperty({}, event.target.name, event.target.value);\n\n    setUser(_objectSpread({}, user, {}, newObj));\n  };\n\n  var handleCheckBox = function handleCheckBox(event, data) {\n    var newObj = _defineProperty({}, data.name, data.checked);\n\n    setUser(_objectSpread({}, user, {}, newObj));\n  };\n\n  var handleButton = function handleButton(event) {\n    event.preventDefault();\n    console.log(user);\n    setModalstate(false);\n  }; // const handleSubmit = async (event)=>{\n  //     event.preventDefault();\n  //     let response = await axios.post('/login',login)\n  //     //need to send the admin flag to users\n  //     //router.push({ pathname: response.data.redirectUrl, query: response.data.query.adminflag })\n  //     response.data.success? router.push({ pathname: response.data.redirectUrl}): console.log('incorrect password')\n  //     //done after data is sent for authentication\n  //     ///this clears object\n  //     setLogin({\n  //       user: '',\n  //       password: ''\n  //     });\n  // };\n\n\n  return __jsx(InternalLayout, {\n    adminFlag: \"y\"\n  }, __jsx(ModalLayout, {\n    buttonColor: \"green\",\n    modalstate: modalstate,\n    handleModal: handleModal,\n    buttonLocation: \"right\",\n    buttonName: \"New User\",\n    icon: \"plus\",\n    title: \"Add a new user\",\n    modalContent: __jsx(RegisterUser, {\n      title: \"Add User\",\n      user: user,\n      inputchange: handleInput,\n      checkboxchange: handleCheckBox\n    }),\n    modalActions: __jsx(Button, {\n      positive: true,\n      content: \"OK\",\n      onClick: handleButton\n    }),\n    user: user\n  }), __jsx(Table, {\n    tablemodalstate: modalstate,\n    tablehandleModal: handleModal,\n    tablehandleButton: handleButton,\n    tableinputchange: handleInput,\n    tablecheckboxchange: handleCheckBox,\n    tableuser: user\n  }));\n});","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/pages/users.js"],"names":["InternalLayout","Table","ModalLayout","RegisterUser","Button","useState","props","username","password","admin","user","setUser","modalstate","setModalstate","handleModal","console","log","handleInput","event","newObj","target","name","value","handleCheckBox","data","checked","handleButton","preventDefault"],"mappings":";;;;;;;;AAAA,OAAOA,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAEA,gBAAe,UAACC,KAAD,EAAW;AACtB;AACA;AAFsB,kBAGCD,QAAQ,CAAC;AAC5BE,IAAAA,QAAQ,EAAE,EADkB;AAE5BC,IAAAA,QAAQ,EAAE,EAFkB;AAG5BC,IAAAA,KAAK,EAAC;AAHsB,GAAD,CAHT;AAAA,MAGfC,IAHe;AAAA,MAGVC,OAHU;;AAAA,mBAQaN,QAAQ,CAAC,KAAD,CARrB;AAAA,MAQfO,UARe;AAAA,MAQJC,aARI;;AAStB,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAK;AACrBF,IAAAA,UAAU,GAACC,aAAa,CAAC,KAAD,CAAd,GAAsBA,aAAa,CAAC,IAAD,CAA7C;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACH,GAHD;;AAIA,MAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAS;AACzB,QAAIC,MAAM,uBAAKD,KAAK,CAACE,MAAN,CAAaC,IAAlB,EAAwBH,KAAK,CAACE,MAAN,CAAaE,KAArC,CAAV;;AACAX,IAAAA,OAAO,mBAAKD,IAAL,MAAaS,MAAb,EAAP;AACH,GAHD;;AAMA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACL,KAAD,EAAOM,IAAP,EAAgB;AACnC,QAAIL,MAAM,uBAAKK,IAAI,CAACH,IAAV,EAAiBG,IAAI,CAACC,OAAtB,CAAV;;AACAd,IAAAA,OAAO,mBAAKD,IAAL,MAAaS,MAAb,EAAP;AACH,GAHD;;AAIA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACR,KAAD,EAAS;AAC1BA,IAAAA,KAAK,CAACS,cAAN;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACAG,IAAAA,aAAa,CAAC,KAAD,CAAb;AAEH,GALD,CAvBsB,CA6BtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SACA,MAAC,cAAD;AAAgB,IAAA,SAAS,EAAC;AAA1B,KACI,MAAC,WAAD;AAAa,IAAA,WAAW,EAAC,OAAzB;AACI,IAAA,UAAU,EAAED,UADhB;AAEI,IAAA,WAAW,EAAEE,WAFjB;AAGI,IAAA,cAAc,EAAC,OAHnB;AAII,IAAA,UAAU,EAAC,UAJf;AAKI,IAAA,IAAI,EAAC,MALT;AAMI,IAAA,KAAK,EAAC,gBANV;AAOI,IAAA,YAAY,EAAE,MAAC,YAAD;AAAc,MAAA,KAAK,EAAC,UAApB;AAA+B,MAAA,IAAI,EAAEJ,IAArC;AAA2C,MAAA,WAAW,EAAEO,WAAxD;AAAqE,MAAA,cAAc,EAAEM;AAArF,MAPlB;AAQI,IAAA,YAAY,EAAE,MAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,OAAO,EAAC,IAAzB;AAA8B,MAAA,OAAO,EAAEG;AAAvC,MARlB;AASI,IAAA,IAAI,EAAEhB;AATV,IADJ,EAaI,MAAC,KAAD;AAAQ,IAAA,eAAe,EAAEE,UAAzB;AACI,IAAA,gBAAgB,EAAEE,WADtB;AAEI,IAAA,iBAAiB,EAAEY,YAFvB;AAGI,IAAA,gBAAgB,EAAET,WAHtB;AAII,IAAA,mBAAmB,EAAEM,cAJzB;AAKI,IAAA,SAAS,EAAEb;AALf,IAbJ,CADA;AAsBH,CAhED","sourcesContent":["import InternalLayout from '../components/InternalLayout';\nimport Table from '../components/Table';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport { Button } from 'semantic-ui-react';\n//import { useRouter } from 'next/router';\nimport {useState} from 'react';\n\nexport default (props) => {\n    ///figure out how to send the admin flag from the login page\n    //let router = useRouter();\n    const [user,setUser] = useState({\n        username: '',\n        password: '',\n        admin:false\n    });\n    const [modalstate,setModalstate] = useState(false);\n    const handleModal = ()=> {\n        modalstate?setModalstate(false):setModalstate(true);\n        console.log(modalstate)\n    };\n    const handleInput = (event)=>{\n        let newObj = {[event.target.name]:event.target.value};        \n        setUser({...user,...newObj});\n    }\n\n\n    const handleCheckBox = (event,data) => {\n        let newObj = {[data.name]: data.checked};\n        setUser({...user,...newObj});\n    }\n    const handleButton = (event)=>{\n        event.preventDefault();\n        console.log(user);\n        setModalstate(false);\n        \n    }\n    // const handleSubmit = async (event)=>{\n    //     event.preventDefault();\n    //     let response = await axios.post('/login',login)\n    //     //need to send the admin flag to users\n    //     //router.push({ pathname: response.data.redirectUrl, query: response.data.query.adminflag })\n    //     response.data.success? router.push({ pathname: response.data.redirectUrl}): console.log('incorrect password')\n    //     //done after data is sent for authentication\n    //     ///this clears object\n    //     setLogin({\n    //       user: '',\n    //       password: ''\n    //     });\n    // };\n    return (\n    <InternalLayout adminFlag='y'>\n        <ModalLayout buttonColor='green'\n            modalstate={modalstate}\n            handleModal={handleModal}\n            buttonLocation='right' \n            buttonName='New User' \n            icon='plus' \n            title='Add a new user'\n            modalContent={<RegisterUser title='Add User' user={user} inputchange={handleInput} checkboxchange={handleCheckBox}/>}\n            modalActions={<Button positive content='OK' onClick={handleButton} />}\n            user={user}\n        >\n        </ModalLayout>\n        <Table  tablemodalstate={modalstate}\n            tablehandleModal={handleModal}\n            tablehandleButton={handleButton}\n            tableinputchange={handleInput}\n            tablecheckboxchange={handleCheckBox}\n            tableuser={user}\n        ></Table>\n    </InternalLayout>);\n}"]},"metadata":{},"sourceType":"module"}