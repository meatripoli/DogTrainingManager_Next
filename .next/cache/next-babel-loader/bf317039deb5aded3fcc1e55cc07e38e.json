{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Table, Button, Icon } from 'semantic-ui-react';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst tableData = [{\n  user: 'John',\n  admin: 'y',\n  gender: 'Male'\n}, {\n  user: 'Amber',\n  admin: 'n',\n  gender: 'Female'\n}, {\n  user: 'Leslie',\n  admin: 'n',\n  gender: 'Other'\n}, {\n  user: 'Ben',\n  admin: 'n',\n  gender: 'Male'\n}];\n\nconst ModalContent = props => __jsx(\"p\", null, props.text);\n\nconst ModalAction = () => __jsx(Button, {\n  positive: true,\n  content: \"OK\"\n});\n\nexport default (() => {\n  const {\n    0: data,\n    1: setData\n  } = useState({}); //onLoad we want to do a get\n\n  useEffect(() => {\n    async function fetchData() {\n      console.log('inside api/users get request');\n      let newData = await axios.get('/api/users');\n    }\n\n    fetchData(); //setData(newData);\n    //console.log(newData);\n  }, []); //to edit user info click on name and a pop up will ask you \n\n  return __jsx(Table, {\n    basic: \"very\",\n    striped: true,\n    sortable: true,\n    celled: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Username\"), __jsx(Table.HeaderCell, null, \"Password\"), __jsx(Table.HeaderCell, null, \"Admin\"))), __jsx(Table.Body, null, tableData.map(({\n    user,\n    admin\n  }) => __jsx(Table.Row, {\n    key: user\n  }, __jsx(Table.Cell, null, user), __jsx(Table.Cell, null, \"******\"), __jsx(Table.Cell, null, admin, __jsx(ModalLayout, {\n    buttonLocation: \"right\",\n    buttonName: \"Edit\",\n    icon: \"pencil alternate\",\n    title: \"Edit user\",\n    modalContent: __jsx(RegisterUser, {\n      title: \"Edit user\"\n    }),\n    modalActions: __jsx(ModalAction, null)\n  }), __jsx(ModalLayout, {\n    buttonLocation: \"right\",\n    buttonName: \"Remove\",\n    icon: \"trash\",\n    title: \"Delete user\",\n    modalContent: __jsx(ModalContent, {\n      text: \"Are you sure you want to delete this account?\"\n    }),\n    modalActions: __jsx(ModalAction, null)\n  }))))));\n});","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/components/Table.js"],"names":["Table","Button","Icon","ModalLayout","RegisterUser","useEffect","useState","axios","tableData","user","admin","gender","ModalContent","props","text","ModalAction","data","setData","fetchData","console","log","newData","get","map"],"mappings":"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","sourcesContent":["import { Table, Button, Icon } from 'semantic-ui-react';\nimport ModalLayout from '../components/ModalLayout';\nimport RegisterUser from '../components/RegisterUser';\nimport {useEffect,useState} from 'react';\nimport axios from 'axios';\n\nconst tableData = [\n    { user: 'John', admin: 'y', gender: 'Male' },\n    { user: 'Amber', admin: 'n', gender: 'Female' },\n    { user: 'Leslie', admin: 'n', gender: 'Other' },\n    { user: 'Ben', admin: 'n', gender: 'Male' },\n  ]\nconst ModalContent = (props) => <p>{props.text}</p>;\nconst ModalAction = () => <Button positive content='OK' />\n\nexport default ()=>{\n    const [data,setData] = useState({});\n    //onLoad we want to do a get\n    useEffect(()=>{\n        async function fetchData (){\n            console.log('inside api/users get request')\n            let newData = await axios.get('/api/users');\n        }\n        fetchData ();\n        //setData(newData);\n        //console.log(newData);\n    },[])\n    //to edit user info click on name and a pop up will ask you \n    return(\n        <Table basic='very' striped sortable celled >\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell\n                    //sorted={column === 'name' ? direction : null}\n                    //onClick={}\n                    >\n                    Username\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                    //sorted={column === 'age' ? direction : null}\n                    //onClick={}\n                    >\n                    Password\n                    </Table.HeaderCell>\n                    <Table.HeaderCell\n                    //sorted={column === 'gender' ? direction : null}\n                    //onClick={}\n                    >\n                    Admin\n                    </Table.HeaderCell>\n                    \n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n            {tableData.map(({ user,admin }) => (\n                <Table.Row key={user}>\n                    <Table.Cell>{user}</Table.Cell>\n                    <Table.Cell>******</Table.Cell>\n                    <Table.Cell>\n                        {admin}\n                        <ModalLayout \n                            buttonLocation='right' \n                            buttonName='Edit' \n                            icon='pencil alternate' \n                            title='Edit user'\n                            modalContent={<RegisterUser title='Edit user'/>}\n                            modalActions={<ModalAction />}\n                        >\n                        </ModalLayout>\n                        <ModalLayout \n                            buttonLocation='right' \n                            buttonName='Remove' \n                            icon='trash' \n                            title='Delete user'\n                            modalContent={<ModalContent text='Are you sure you want to delete this account?'/>}\n                            modalActions={<ModalAction />}\n                        >\n                        </ModalLayout>\n                    </Table.Cell>\n                </Table.Row>\n            ))}\n            </Table.Body>\n        </Table>\n    );\n}"]},"metadata":{},"sourceType":"module"}