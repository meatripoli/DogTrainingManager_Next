{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Table } from 'semantic-ui-react';\nvar tableData = [{\n  name: 'John',\n  age: 15,\n  gender: 'Male'\n}, {\n  name: 'Amber',\n  age: 40,\n  gender: 'Female'\n}, {\n  name: 'Leslie',\n  age: 25,\n  gender: 'Other'\n}, {\n  name: 'Ben',\n  age: 70,\n  gender: 'Male'\n}];\nexport default (function () {\n  return __jsx(Table, {\n    sortable: true,\n    celled: true,\n    fixed: true\n  }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, null, \"Name\"), __jsx(Table.HeaderCell, null, \"Age\"), __jsx(Table.HeaderCell, null, \"Gender\"))), __jsx(Table.Body, null, tableData.map(data, function (_ref) {\n    var age = _ref.age,\n        gender = _ref.gender,\n        name = _ref.name;\n    return __jsx(Table.Row, {\n      key: name\n    }, __jsx(Table.Cell, null, name), __jsx(Table.Cell, null, age), __jsx(Table.Cell, null, gender));\n  })));\n});\n{\n  /* <table className=\"table table-striped\">\n             <thead>\n                 <tr>\n                     <th scope=\"col\">Picture</th>\n                     <th scope=\"col\" className={prop.sortClass} onClick={prop.handleSort}>Name</th>\n                     <th scope=\"col\">Phone</th>\n                     <th scope=\"col\">Email</th>\n                     <th scope=\"col\">Birthday</th>\n                 </tr>\n             </thead>\n             <tbody>\n                 {prop.data ? prop.data.map( (element,index) => <TableBody key ={index} data = {element}/> ) : <td>Loading...</td>}\n             </tbody>\n         </table> */\n}","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/components/Table.js"],"names":["Table","tableData","name","age","gender","map","data"],"mappings":";;AAAA,SAASA,KAAT,QAAsB,mBAAtB;AACA,IAAMC,SAAS,GAAG,CACd;AAAEC,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,GAAG,EAAE,EAArB;AAAyBC,EAAAA,MAAM,EAAE;AAAjC,CADc,EAEd;AAAEF,EAAAA,IAAI,EAAE,OAAR;AAAiBC,EAAAA,GAAG,EAAE,EAAtB;AAA0BC,EAAAA,MAAM,EAAE;AAAlC,CAFc,EAGd;AAAEF,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,GAAG,EAAE,EAAvB;AAA2BC,EAAAA,MAAM,EAAE;AAAnC,CAHc,EAId;AAAEF,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,GAAG,EAAE,EAApB;AAAwBC,EAAAA,MAAM,EAAE;AAAhC,CAJc,CAAlB;AAMA,gBAAe,YAAI;AACf,SACI,MAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,MAAM,MAAtB;AAAuB,IAAA,KAAK;AAA5B,KACA,MAAC,KAAD,CAAO,MAAP,QACE,MAAC,KAAD,CAAO,GAAP,QACE,MAAC,KAAD,CAAO,UAAP,eADF,EAOE,MAAC,KAAD,CAAO,UAAP,cAPF,EAaE,MAAC,KAAD,CAAO,UAAP,iBAbF,CADF,CADA,EAuBA,MAAC,KAAD,CAAO,IAAP,QACGH,SAAS,CAACI,GAAV,CAAcC,IAAd,EAAoB;AAAA,QAAGH,GAAH,QAAGA,GAAH;AAAA,QAAQC,MAAR,QAAQA,MAAR;AAAA,QAAgBF,IAAhB,QAAgBA,IAAhB;AAAA,WACnB,MAAC,KAAD,CAAO,GAAP;AAAW,MAAA,GAAG,EAAEA;AAAhB,OACE,MAAC,KAAD,CAAO,IAAP,QAAaA,IAAb,CADF,EAEE,MAAC,KAAD,CAAO,IAAP,QAAaC,GAAb,CAFF,EAGE,MAAC,KAAD,CAAO,IAAP,QAAaC,MAAb,CAHF,CADmB;AAAA,GAApB,CADH,CAvBA,CADJ;AAmCH,CApCD;AAsCA;AAAC;;;;;;;;;;;;;;AAamB","sourcesContent":["import { Table } from 'semantic-ui-react'\nconst tableData = [\n    { name: 'John', age: 15, gender: 'Male' },\n    { name: 'Amber', age: 40, gender: 'Female' },\n    { name: 'Leslie', age: 25, gender: 'Other' },\n    { name: 'Ben', age: 70, gender: 'Male' },\n  ]\nexport default ()=>{\n    return(\n        <Table sortable celled fixed>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell\n              //sorted={column === 'name' ? direction : null}\n              //onClick={}\n            >\n              Name\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              //sorted={column === 'age' ? direction : null}\n              //onClick={}\n            >\n              Age\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              //sorted={column === 'gender' ? direction : null}\n              //onClick={}\n            >\n              Gender\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {tableData.map(data, ({ age, gender, name }) => (\n            <Table.Row key={name}>\n              <Table.Cell>{name}</Table.Cell>\n              <Table.Cell>{age}</Table.Cell>\n              <Table.Cell>{gender}</Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    );\n}\n\n{/* <table className=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Picture</th>\n                    <th scope=\"col\" className={prop.sortClass} onClick={prop.handleSort}>Name</th>\n                    <th scope=\"col\">Phone</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Birthday</th>\n                </tr>\n            </thead>\n            <tbody>\n                {prop.data ? prop.data.map( (element,index) => <TableBody key ={index} data = {element}/> ) : <td>Loading...</td>}\n            </tbody>\n        </table> */}"]},"metadata":{},"sourceType":"module"}