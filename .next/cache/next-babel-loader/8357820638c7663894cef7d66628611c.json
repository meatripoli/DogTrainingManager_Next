{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Modal, Icon } from 'semantic-ui-react';\nimport { useState, useEffect } from 'react';\nimport RegisterUser from '../components/RegisterUser';\nimport axios from 'axios';\nexport default (props => {\n  let response;\n\n  function refreshPage() {\n    window.location.reload(false);\n  }\n\n  let switchFun = async data => {\n    switch (props.buttonName) {\n      case 'Remove':\n        if (!data.adminflag) {\n          console.log('delete button');\n          response = await axios.delete('/api/users', {\n            data: data\n          });\n          console.log(response);\n\n          if (response.status === 200) {\n            console.log(data.username, 'was deleted');\n            refreshPage();\n          } else {\n            alert('there was an error deleting user:', data.username);\n          }\n\n          break;\n        } else {\n          alert('Dont have permission to delete an admin user');\n          break;\n        }\n\n      case 'New User':\n        console.log('add button');\n        response = await axios.post('/api/users', data);\n        console.log(response); //refreshPage();\n        //alert user was added\n\n        if (response.status === 200) {\n          console.log('new user added');\n          refreshPage();\n        } else {\n          alert('there was an error adding user:', data.username);\n        } //  this clears object\n\n\n        setUser({\n          username: '',\n          adminflag: false,\n          id: 0,\n          password: ''\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const {\n    0: user,\n    1: setUser\n  } = useState(props.current ? props.current : {\n    username: '',\n    admin: false,\n    id: 0,\n    password: ''\n  });\n  const {\n    0: modalstate,\n    1: setModalstate\n  } = useState(false);\n\n  const handleModal = event => {\n    modalstate ? setModalstate(false) : setModalstate(true);\n  };\n\n  const handleInput = event => {\n    let newObj = {\n      [event.target.name]: event.target.value\n    };\n    setUser(_objectSpread({}, user, {}, newObj));\n  };\n\n  const handleCheckBox = (event, data) => {\n    let newObj = {\n      [data.name]: data.checked\n    };\n    setUser(_objectSpread({}, user, {}, newObj));\n  };\n\n  const handleButton = async event => {\n    event.preventDefault();\n    setModalstate(false);\n    switchFun(user);\n  };\n\n  return __jsx(Modal, {\n    size: \"small\",\n    dimmer: \"blurring\",\n    onClose: handleModal,\n    open: modalstate,\n    trigger: __jsx(Button, {\n      icon: true,\n      color: props.buttonColor,\n      floated: props.buttonLocation,\n      onClick: handleModal,\n      style: {\n        marginBottom: '5px'\n      },\n      data: props.test\n    }, __jsx(\"p\", null, __jsx(Icon, {\n      name: props.icon\n    }))),\n    closeIcon: true\n  }, __jsx(Modal.Header, null, props.title), __jsx(Modal.Content, null, props.modalContent ? props.modalContent : __jsx(RegisterUser, {\n    title: props.buttonName,\n    value: user,\n    inputchange: handleInput,\n    checkboxchange: handleCheckBox\n  })), __jsx(Modal.Actions, null, __jsx(Button, {\n    positive: true,\n    content: \"OK\",\n    onClick: handleButton\n  })));\n});","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/components/ModalLayout.js"],"names":["Button","Modal","Icon","useState","useEffect","RegisterUser","axios","props","response","refreshPage","window","location","reload","switchFun","data","buttonName","adminflag","console","log","delete","status","username","alert","post","setUser","id","password","user","current","admin","modalstate","setModalstate","handleModal","event","handleInput","newObj","target","name","value","handleCheckBox","checked","handleButton","preventDefault","buttonColor","buttonLocation","marginBottom","test","icon","title","modalContent"],"mappings":"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","sourcesContent":["import { Button, Modal, Icon } from 'semantic-ui-react';\nimport {useState, useEffect} from 'react';\nimport RegisterUser from '../components/RegisterUser';\nimport axios from 'axios';\n\nexport default (props) => {\n  let response;\n  function refreshPage() {\n    window.location.reload(false);\n  }\n  let switchFun = async (data) => {switch (props.buttonName) {\n    case 'Remove':\n      if(!data.adminflag){\n        console.log('delete button')\n        response = await axios.delete('/api/users',{data:data});\n        console.log(response)\n        if(response.status===200){\n          console.log(data.username,'was deleted')\n          refreshPage();\n        }\n        else{\n          alert('there was an error deleting user:', data.username)\n        }\n        break;\n      }\n      else{\n        alert('Dont have permission to delete an admin user')\n        break;\n      }\n    case 'New User' :\n      console.log('add button')\n      response = await axios.post('/api/users',data);\n      console.log(response)\n      //refreshPage();\n      //alert user was added\n      if(response.status===200){\n        console.log('new user added')\n        refreshPage();\n      }\n      else{\n        alert('there was an error adding user:', data.username)\n      }\n//  this clears object\n      setUser({\n        username: '',\n        adminflag:false,\n        id:0,\n        password: '',\n      });\n      break;\n  \n    default:\n      break;\n  }}\n  const [user,setUser] = useState(props.current?props.current:{\n    username: '',\n    admin:false,\n    id:0,\n    password: '',\n  });\n  const [modalstate,setModalstate] = useState(false);\n  const handleModal = (event)=> {\n    modalstate?setModalstate(false):setModalstate(true);\n  };\n  const handleInput = (event)=>{\n    let newObj = {[event.target.name]:event.target.value};        \n    setUser({...user,...newObj});\n  };  \n  const handleCheckBox = (event,data) => {\n    let newObj = {[data.name]: data.checked};\n    setUser({...user,...newObj});\n  };\n  const handleButton = async (event)=>{\n    event.preventDefault();\n    setModalstate(false);  \n    switchFun(user);\n  };\n  return (\n  <Modal size='small' dimmer= 'blurring' onClose={handleModal} open={modalstate} trigger={\n    <Button icon color={props.buttonColor} floated={props.buttonLocation} onClick={handleModal} style={{marginBottom:'5px'}} data={props.test}>\n        <p><Icon name={props.icon} /></p>\n    </Button>\n  } closeIcon>\n    <Modal.Header>{props.title}</Modal.Header>\n    <Modal.Content>\n      {props.modalContent? props.modalContent: <RegisterUser title={props.buttonName} value={user} inputchange={handleInput} checkboxchange={handleCheckBox}/>}\n    </Modal.Content>\n    <Modal.Actions>\n      <Button positive content='OK' onClick={handleButton} />\n    </Modal.Actions>\n  </Modal>\n)};"]},"metadata":{},"sourceType":"module"}