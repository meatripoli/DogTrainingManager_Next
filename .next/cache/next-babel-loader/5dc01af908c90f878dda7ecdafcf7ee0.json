{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Segment, Grid, Image, List, Form, Header } from 'semantic-ui-react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nvar programOptions = [{\n  key: 'o',\n  text: '',\n  value: 'other'\n}, {\n  key: 'b',\n  text: 'Boarding',\n  value: 'boarding'\n}, {\n  key: 'bt',\n  text: 'Board & Train',\n  value: 'board and train'\n}, {\n  key: 't',\n  text: 'Train',\n  value: 'train'\n}, {\n  key: 'g',\n  text: 'Going Home',\n  value: 'gohome'\n}];\nvar heelOptions = [{\n  key: 'l',\n  text: 'Left',\n  value: 'left'\n}, {\n  key: 'r',\n  text: 'Right',\n  value: 'right'\n}];\nexport default (function (props) {\n  console.log('profile:', props);\n\n  var _useState = useState({\n    id: props.data.id,\n    heel: props.data.heel,\n    program: props.data.program,\n    intakeDate: props.data.intakeDate\n  }),\n      data = _useState[0],\n      setData = _useState[1];\n\n  useEffect(function () {\n    axios.get('/api/dogprofile/' + props.data.id).then(function (res) {\n      console.log(res);\n    })[\"catch\"](function (err) {\n      return console.log('Error:', err);\n    });\n  }, []);\n\n  var handleInput = function handleInput(event) {\n    console.log(event.target.name, event.target.value);\n  };\n\n  var handleDropdown = function handleDropdown(event, data) {\n    console.log(data.name, data.value); // let newObj = {[data.name]: data.value};\n    // setForm({...form,...newObj});\n  };\n\n  var handleClick = function handleClick(event) {\n    return _regeneratorRuntime.async(function handleClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(Grid, {\n    divided: \"vertically\"\n  }, __jsx(Grid.Row, {\n    columns: 2\n  }, __jsx(Grid.Column, {\n    width: 6\n  }, __jsx(Image, {\n    src: \"https://www.pngkey.com/png/detail/204-2046914_diane-vulcan-shared-rhodesian-ridgeback.png\",\n    size: \"medium\",\n    circular: true\n  })), __jsx(Grid.Column, {\n    width: 10\n  }, __jsx(Header, {\n    as: \"h1\"\n  }, \"Basic Info\"), __jsx(List, null, __jsx(List.Item, null, \"Name: \", props.data.dogName), __jsx(List.Item, null, \"Age: \", props.data.dogAge), __jsx(List.Item, null, \"Breed: \", props.data.dogBreed), __jsx(List.Item, null, \"Gender: \", props.data.dogGender), __jsx(List.Item, null, \"Owner Contact Information:\", __jsx(List.Item, null, __jsx(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, 'Name: '), \"\".concat(props.data.ownerFirstName, \" \").concat(props.data.ownerLastName)), __jsx(List.Item, null, __jsx(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, 'Phone: '), props.data.ownerCellPhone), __jsx(List.Item, null, __jsx(\"span\", {\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, 'Email: '), props.data.ownerEmail)), __jsx(List.Item, null, \"Food Information: Name: Nature's Logic Sardine flavor Amount: 4 Time: Morning and Evening\"), __jsx(List.Item, null, \"Fixed: \", props.data.fixed), __jsx(List.Item, null, \"Veterinarian Information: Name: Parmer Lane Pet Hospital Phone: 512-260-5443\"), __jsx(List.Item, null, \"Allergies: \", props.data.allegires), __jsx(List.Item, null, \"Medication: \", props.data.medication)))), __jsx(Grid.Row, {\n    stretched: true,\n    columns: 2\n  }, __jsx(Grid.Column, {\n    width: 8\n  }, __jsx(Segment, null, __jsx(Header, {\n    as: \"h3\"\n  }, \"Issues\"), __jsx(List, null, __jsx(List.Item, null, \"None Provided\")))), __jsx(Grid.Column, {\n    width: 8\n  }, __jsx(Segment, null, __jsx(Header, {\n    as: \"h3\"\n  }, \"Extra Comments\"), __jsx(\"p\", null, \"Extra Issues: She is too stinking cute for her own good\"), __jsx(\"p\", null, \"Owner Notes: (if blank) None Provided\")), __jsx(Segment, null, __jsx(Header, {\n    as: \"h3\"\n  }, \"Known Commands\"), __jsx(\"p\", null, \"All of them\")))), __jsx(Grid.Row, {\n    stretched: true,\n    columns: 1\n  }, __jsx(Header, {\n    as: \"h1\",\n    style: {\n      marginLeft: '10px'\n    }\n  }, \"Intake Info (provided by trainer)\"), __jsx(Grid.Column, null, __jsx(Form, null, __jsx(Form.Group, {\n    widths: \"equal\"\n  }, __jsx(Form.Select, {\n    fluid: true,\n    label: \"Heel\",\n    options: heelOptions,\n    placeholder: \"Left\",\n    value: data.heel,\n    onChange: handleDropdown,\n    name: \"heel\"\n  }), __jsx(Form.Select, {\n    fluid: true,\n    label: \"Program\",\n    options: programOptions,\n    placeholder: \"Program\",\n    onChange: handleDropdown,\n    value: data.program,\n    name: \"program\"\n  }), __jsx(Form.Input, {\n    fluid: true,\n    label: \"Intake Date\",\n    name: \"dateofIntake\",\n    type: \"date\",\n    value: data.intakeDate,\n    onChange: handleInput\n  })), __jsx(Form.Button, {\n    positive: true\n  }, \"Save\")))), __jsx(Grid.Row, null));\n});","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/components/Profile.js"],"names":["Segment","Grid","Image","List","Form","Header","useState","useEffect","axios","programOptions","key","text","value","heelOptions","props","console","log","id","data","heel","program","intakeDate","setData","get","then","res","err","handleInput","event","target","name","handleDropdown","handleClick","preventDefault","dogName","dogAge","dogBreed","dogGender","fontWeight","ownerFirstName","ownerLastName","ownerCellPhone","ownerEmail","fixed","allegires","medication","marginLeft"],"mappings":"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","sourcesContent":["import { Segment,Grid,Image,List,Form,Header } from 'semantic-ui-react';\nimport {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst programOptions = [\n    { key: 'o', text: '', value: 'other' },\n    { key: 'b', text: 'Boarding', value: 'boarding' },\n    { key: 'bt', text: 'Board & Train', value: 'board and train' },    \n    { key: 't', text: 'Train', value: 'train' },\n    { key: 'g', text: 'Going Home', value: 'gohome' },\n];\nconst heelOptions = [\n    { key: 'l', text: 'Left', value: 'left' },\n    { key: 'r', text: 'Right', value: 'right' },\n];\nexport default (props) => {\n    console.log('profile:' ,props)\n    const [data,setData]=useState({\n        id: props.data.id,\n        heel: props.data.heel,\n        program: props.data.program,\n        intakeDate: props.data.intakeDate,\n    })\n    useEffect(()=>{\n        axios.get('/api/dogprofile/'+props.data.id)\n        .then(res => {\n            console.log(res);\n        })\n        .catch(err => console.log('Error:',err))\n    },[])\n    const handleInput = (event)=>{\n        console.log(event.target.name,event.target.value)\n\n    }\n    const handleDropdown = (event,data)=>{\n        console.log(data.name,data.value)\n        // let newObj = {[data.name]: data.value};\n        // setForm({...form,...newObj});\n    }\n    const handleClick = async (event)=>{\n        event.preventDefault();\n\n    }\n    return (<Grid divided='vertically'>\n            <Grid.Row columns={2}>\n                <Grid.Column width={6}>\n                    <Image src='https://www.pngkey.com/png/detail/204-2046914_diane-vulcan-shared-rhodesian-ridgeback.png' size='medium' circular />\n                </Grid.Column>\n                <Grid.Column width={10}>\n                    <Header as='h1'>Basic Info</Header>\n                    <List>\n                        <List.Item>Name: {props.data.dogName}</List.Item>\n                        <List.Item>Age: {props.data.dogAge}</List.Item>\n                        <List.Item>Breed: {props.data.dogBreed}</List.Item>\n                        <List.Item>Gender: {props.data.dogGender}</List.Item>\n                        <List.Item>\n                            Owner Contact Information: \n                            <List.Item>\n                            <span style={{fontWeight:\"bold\"}}>{'Name: '}</span>\n                            {`${props.data.ownerFirstName} ${props.data.ownerLastName}`}\n                            </List.Item>\n                            <List.Item>\n                            <span style={{fontWeight:\"bold\"}}>{'Phone: '}</span>\n                            {props.data.ownerCellPhone}\n                            </List.Item>\n                            <List.Item>\n                            <span style={{fontWeight:\"bold\"}}>{'Email: '}</span>\n                            {props.data.ownerEmail}\n                            </List.Item>\n                        </List.Item>\n                        <List.Item>Food Information: Name: Nature's Logic Sardine flavor Amount: 4 Time: Morning and Evening</List.Item>\n                        <List.Item>Fixed: {props.data.fixed}</List.Item>\n                        <List.Item>Veterinarian Information: Name: Parmer Lane Pet Hospital Phone: 512-260-5443</List.Item>\n                        <List.Item>Allergies: {props.data.allegires}</List.Item>\n                        <List.Item>Medication: {props.data.medication}</List.Item>\n                    </List>\n                </Grid.Column>\n            </Grid.Row> \n            <Grid.Row stretched columns={2}>\n                <Grid.Column width={8}>\n                    <Segment>\n                        <Header as='h3' >Issues</Header>\n                        <List>\n                            <List.Item>None Provided</List.Item>\n                        </List>\n                    </Segment>\n                </Grid.Column>\n                <Grid.Column width={8}>\n                    <Segment>                        \n                        <Header as='h3' >Extra Comments</Header>\n                        <p>Extra Issues: She is too stinking cute for her own good</p>\n                        <p>Owner Notes: (if blank) None Provided</p>\n                    </Segment>\n                    <Segment>\n                        <Header as='h3' >Known Commands</Header>\n                        <p>All of them</p>\n                    </Segment>\n                </Grid.Column>\n            </Grid.Row>\n            \n            <Grid.Row stretched columns={1}>\n                <Header as='h1' style={{marginLeft:'10px'}}>Intake Info (provided by trainer)</Header>\n                <Grid.Column>\n                    <Form>\n                        <Form.Group widths='equal'>\n                            <Form.Select\n                                fluid\n                                label = 'Heel'\n                                options={heelOptions}\n                                placeholder = 'Left'\n                                value = {data.heel}\n                                onChange = {handleDropdown}\n                                name= 'heel'\n                            />\n                            <Form.Select\n                                fluid\n                                label = 'Program'\n                                options={programOptions}\n                                placeholder = 'Program'\n                                onChange = {handleDropdown}\n                                value = {data.program}\n                                name= 'program'\n                            />\n                            <Form.Input \n                                fluid \n                                label='Intake Date' \n                                name='dateofIntake' \n                                type='date' \n                                value = {data.intakeDate}\n                                onChange = {handleInput}\n                            />\n                        </Form.Group>\n                        <Form.Button positive>Save</Form.Button>\n                    </Form>\n                </Grid.Column>\n            </Grid.Row>\n            <Grid.Row></Grid.Row>\n        </Grid>\n    );\n};"]},"metadata":{},"sourceType":"module"}