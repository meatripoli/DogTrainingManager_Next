{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport SignInLayout from '../components/SignInLayout';\nimport MyGrid from '../components/MyGrid';\nimport Users from './users';\nimport { Form, Button } from 'semantic-ui-react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router';\nexport default (function () {\n  var _useState = useState({\n    user: '',\n    password: ''\n  }),\n      login = _useState[0],\n      setLogin = _useState[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    var response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(axios.post('/login', login));\n\n          case 3:\n            response = _context.sent;\n            console.log(response); //<Users adminFlag={response.data.query.adminflag}/>\n\n            response.data.success ? __jsx(Users, null) : console.log('incorrect password'); //done after data is sent for authentication\n            ///this clears object\n\n            setLogin({\n              user: '',\n              password: ''\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleLoginChange = function handleLoginChange(event) {\n    var newObj = _defineProperty({}, event.target.name, event.target.value); ///this will not override the data that already exists in obj login\n\n\n    setLogin(_objectSpread({}, login, {}, newObj));\n  };\n\n  return __jsx(SignInLayout, null, __jsx(MyGrid, {\n    columnNum: 2,\n    header: \"Login\",\n    message: \"Not registered yet? Contact your admin at email@example.com to create your account.\"\n  }, __jsx(Form, {\n    size: \"large\"\n  }, __jsx(Form.Input, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Username\",\n    onChange: handleLoginChange,\n    name: \"user\",\n    type: \"text\",\n    value: login.user\n  }), __jsx(Form.Input, {\n    fluid: true,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    placeholder: \"Password\",\n    type: \"password\",\n    onChange: handleLoginChange,\n    name: \"password\",\n    value: login.password\n  }), __jsx(Button, {\n    type: \"submit\",\n    size: \"large\",\n    onClick: handleSubmit\n  }, \"Log In\"))));\n});","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/pages/login.js"],"names":["SignInLayout","MyGrid","Users","Form","Button","useState","axios","Router","user","password","login","setLogin","handleSubmit","event","preventDefault","post","response","console","log","data","success","handleLoginChange","newObj","target","name","value"],"mappings":";;;;;;;;;AAAA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,mBAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,gBAAe,YAAM;AAAA,kBACMF,QAAQ,CAAC;AAChCG,IAAAA,IAAI,EAAE,EAD0B;AAEhCC,IAAAA,QAAQ,EAAE;AAFsB,GAAD,CADd;AAAA,MACZC,KADY;AAAA,MACNC,QADM;;AAKnB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,YAAAA,KAAK,CAACC,cAAN;AADmB;AAAA,6CAEER,KAAK,CAACS,IAAN,CAAW,QAAX,EAAoBL,KAApB,CAFF;;AAAA;AAEfM,YAAAA,QAFe;AAGnBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAHmB,CAInB;;AACAA,YAAAA,QAAQ,CAACG,IAAT,CAAcC,OAAd,GAAuB,MAAC,KAAD,OAAvB,GAAkCH,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAlC,CALmB,CAMnB;AACA;;AACAP,YAAAA,QAAQ,CAAC;AACPH,cAAAA,IAAI,EAAE,EADC;AAEPC,cAAAA,QAAQ,EAAE;AAFH,aAAD,CAAR;;AARmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAaA,MAAMY,iBAAiB,GAAG,SAApBA,iBAAoB,CAACR,KAAD,EAAS;AACjC,QAAIS,MAAM,uBAAKT,KAAK,CAACU,MAAN,CAAaC,IAAlB,EAAyBX,KAAK,CAACU,MAAN,CAAaE,KAAtC,CAAV,CADiC,CAEjC;;;AACAd,IAAAA,QAAQ,mBAAKD,KAAL,MAAcY,MAAd,EAAR;AACD,GAJD;;AAMA,SAAQ,MAAC,YAAD,QACN,MAAC,MAAD;AACI,IAAA,SAAS,EAAI,CADjB;AAEI,IAAA,MAAM,EAAC,OAFX;AAGI,IAAA,OAAO,EAAC;AAHZ,KAKI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACI,MAAC,IAAD,CAAM,KAAN;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,YAAY,EAAC,MAHjB;AAII,IAAA,WAAW,EAAC,UAJhB;AAKI,IAAA,QAAQ,EAAED,iBALd;AAMI,IAAA,IAAI,EAAC,MANT;AAOI,IAAA,IAAI,EAAC,MAPT;AAQI,IAAA,KAAK,EAAEX,KAAK,CAACF;AARjB,IADJ,EAWI,MAAC,IAAD,CAAM,KAAN;AACI,IAAA,KAAK,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,YAAY,EAAC,MAHjB;AAII,IAAA,WAAW,EAAC,UAJhB;AAKI,IAAA,IAAI,EAAC,UALT;AAMI,IAAA,QAAQ,EAAEa,iBANd;AAOI,IAAA,IAAI,EAAC,UAPT;AAQI,IAAA,KAAK,EAAEX,KAAK,CAACD;AARjB,IAXJ,EAqBI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,IAAI,EAAC,OAA3B;AAAmC,IAAA,OAAO,EAAEG;AAA5C,cArBJ,CALJ,CADM,CAAR;AA+BD,CAvDD","sourcesContent":["import SignInLayout from '../components/SignInLayout';\nimport MyGrid from '../components/MyGrid';\nimport Users from './users'\nimport {Form, Button} from 'semantic-ui-react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Router from 'next/router'\n\nexport default () => {\n  const [login,setLogin] = useState({\n    user: '',\n    password: ''\n  })\n  const handleSubmit = async (event)=>{\n    event.preventDefault();\n    let response = await axios.post('/login',login)\n    console.log(response)\n    //<Users adminFlag={response.data.query.adminflag}/>\n    response.data.success? <Users />: console.log('incorrect password')\n    //done after data is sent for authentication\n    ///this clears object\n    setLogin({\n      user: '',\n      password: ''\n    });\n  };\n  const handleLoginChange = (event)=>{\n    let newObj = {[event.target.name]: event.target.value};\n    ///this will not override the data that already exists in obj login\n    setLogin({...login,...newObj});\n  }\n\n  return (<SignInLayout>\n    <MyGrid \n        columnNum = {2} \n        header='Login'\n        message='Not registered yet? Contact your admin at email@example.com to create your account.'\n    >\n        <Form size=\"large\">\n            <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                onChange={handleLoginChange}\n                name='user'\n                type='text'\n                value={login.user}\n            />\n            <Form.Input\n                fluid\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                type=\"password\"\n                onChange={handleLoginChange}\n                name='password'\n                value={login.password}\n            />\n            <Button type='submit' size=\"large\" onClick={handleSubmit}>Log In</Button>\n        </Form>\n    </MyGrid>\n  </SignInLayout>);\n};"]},"metadata":{},"sourceType":"module"}