{"version":3,"file":"static/webpack/static/development/pages/index.js.7d82803bb445dbc58424.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import SignInLayout from '../components/SignInLayout';\nimport MyGrid from '../components/MyGrid';\nimport {Form, Button} from 'semantic-ui-react';\nimport {useState,useContext} from 'react';\nimport axios from 'axios';\nimport router from 'next/router'\nimport UserContext from '../components/util/UserContext';\n\nexport default (props) => {\n  const { signIn } = useContext(UserContext);\n  const [message,setMessage]=useState({\n    color:'grey',\n    body:'Not registered yet? Contact your admin at email@example.com to create your account.'\n  })\n  const [login,setLogin] = useState({\n    user: '',\n    password: ''\n  })\n  const handleSubmit = async (event)=>{\n    event.preventDefault();\n    try{\n      let response = await axios.post('/login',login)\n      signIn(response.data.data.user, response.data.data.id, response.data.data.adminflag)\n      //need to send the admin flag to users\n      router.push({ pathname: response.data.redirectUrl, state: response.data.data})\n    }\n    catch(e){\n      console.log(e)\n      if(e.response.status===401){\n        let newObj = {body: 'Incorrect user or password',color:'red'};\n        setMessage({...message,...newObj})\n      }\n      else{\n        console.log(e.response)\n      }\n    }\n    //done after data is sent for authentication\n    ///this clears object\n    setLogin({\n      user: '',\n      password: ''\n    });\n  };\n\n  const handleLoginChange = (event)=>{\n    let newObj = {[event.target.name]: event.target.value};\n    setLogin({...login,...newObj});\n  }\n\n  return (<SignInLayout>\n    <MyGrid \n        columnNum = {2} \n        header='Login'\n        body={message.body}\n        color={message.color}\n    >\n        <Form size=\"large\">\n            <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                onChange={handleLoginChange}\n                name='user'\n                type='text'\n                value={login.user}\n            />\n            <Form.Input\n                fluid\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                type=\"password\"\n                onChange={handleLoginChange}\n                name='password'\n                value={login.password}\n            />\n            <Button type='submit' size=\"large\" onClick={handleSubmit}>Log In</Button>\n        </Form>\n    </MyGrid>\n  </SignInLayout>);\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AAFA;AAFA;AAAA;AACA;AADA;AAOA;AACA;AAFA;AANA;AAAA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AANA;AAAA;AACA;AADA;AAAA;AAAA;AASA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAjBA;AAkBA;AACA;AACA;AACA;AACA;AAFA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAyBA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}