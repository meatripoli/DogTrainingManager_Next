{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Button, Modal, Icon } from 'semantic-ui-react';\nimport { useState, useEffect } from 'react';\nimport RegisterUser from '../components/RegisterUser';\nexport default (props => {\n  let response;\n\n  let switchFun = async data => {\n    switch (props.buttonName) {\n      case 'Remove':\n        console.log('delete button');\n        response = await axios.post('/login', data);\n        break;\n\n      case 'New User':\n        console.log('delete button');\n        response = await axios.delete('/login', data);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const {\n    0: user,\n    1: setUser\n  } = useState(props.current ? props.current : {\n    username: '',\n    admin: false,\n    id: 0,\n    password: ''\n  });\n  const {\n    0: modalstate,\n    1: setModalstate\n  } = useState(false);\n\n  const handleModal = event => {\n    modalstate ? setModalstate(false) : setModalstate(true);\n  };\n\n  const handleInput = event => {\n    let newObj = {\n      [event.target.name]: event.target.value\n    };\n    setUser(_objectSpread({}, user, {}, newObj));\n  };\n\n  const handleCheckBox = (event, data) => {\n    let newObj = {\n      [data.name]: data.checked\n    };\n    setUser(_objectSpread({}, user, {}, newObj));\n  };\n\n  const handleButton = async event => {\n    event.preventDefault();\n    console.log(user);\n    setModalstate(false);\n    switchFun(user); //  this clears object\n    //     setLogin({\n    //       user: '',\n    //       password: ''\n    //   });\n  };\n\n  return __jsx(Modal, {\n    size: \"small\",\n    dimmer: \"blurring\",\n    onClose: handleModal,\n    open: modalstate,\n    trigger: __jsx(Button, {\n      icon: true,\n      color: props.buttonColor,\n      floated: props.buttonLocation,\n      onClick: handleModal,\n      style: {\n        marginBottom: '5px'\n      },\n      data: props.test\n    }, __jsx(\"p\", null, __jsx(Icon, {\n      name: props.icon\n    }))),\n    closeIcon: true\n  }, __jsx(Modal.Header, null, props.title), __jsx(Modal.Content, null, props.modalContent ? props.modalContent : __jsx(RegisterUser, {\n    title: props.buttonName,\n    value: user,\n    inputchange: handleInput,\n    checkboxchange: handleCheckBox\n  })), __jsx(Modal.Actions, null, __jsx(Button, {\n    positive: true,\n    content: \"OK\",\n    onClick: handleButton\n  })));\n});","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/components/ModalLayout.js"],"names":["Button","Modal","Icon","useState","useEffect","RegisterUser","props","response","switchFun","data","buttonName","console","log","axios","post","delete","user","setUser","current","username","admin","id","password","modalstate","setModalstate","handleModal","event","handleInput","newObj","target","name","value","handleCheckBox","checked","handleButton","preventDefault","buttonColor","buttonLocation","marginBottom","test","icon","title","modalContent"],"mappings":"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","sourcesContent":["import { Button, Modal, Icon } from 'semantic-ui-react';\nimport {useState, useEffect} from 'react';\nimport RegisterUser from '../components/RegisterUser';\n\nexport default (props) => {\n  let response;\n  let switchFun = async (data) => {switch (props.buttonName) {\n    case 'Remove':\n      console.log('delete button')\n      response = await axios.post('/login',data)\n      break;\n    case 'New User' :\n      console.log('delete button')\n      response = await axios.delete('/login',data)\n      break;\n  \n    default:\n      break;\n  }}\n  const [user,setUser] = useState(props.current?props.current:{\n    username: '',\n    admin:false,\n    id:0,\n    password: '',\n    \n  });\n  const [modalstate,setModalstate] = useState(false);\n  const handleModal = (event)=> {\n    modalstate?setModalstate(false):setModalstate(true);\n  };\n  const handleInput = (event)=>{\n    let newObj = {[event.target.name]:event.target.value};        \n    setUser({...user,...newObj});\n  };  \n  const handleCheckBox = (event,data) => {\n    let newObj = {[data.name]: data.checked};\n    setUser({...user,...newObj});\n  };\n  const handleButton = async (event)=>{\n    event.preventDefault();\n    console.log(user);\n    setModalstate(false);\n    \n    switchFun(user);\n//  this clears object\n//     setLogin({\n//       user: '',\n//       password: ''\n//   });\n  };\n  return (\n  <Modal size='small' dimmer= 'blurring' onClose={handleModal} open={modalstate} trigger={\n    <Button icon color={props.buttonColor} floated={props.buttonLocation} onClick={handleModal} style={{marginBottom:'5px'}} data={props.test}>\n        <p><Icon name={props.icon} /></p>\n    </Button>\n  } closeIcon>\n    <Modal.Header>{props.title}</Modal.Header>\n    <Modal.Content>\n      {props.modalContent? props.modalContent: <RegisterUser title={props.buttonName} value={user} inputchange={handleInput} checkboxchange={handleCheckBox}/>}\n    </Modal.Content>\n    <Modal.Actions>\n      <Button positive content='OK' onClick={handleButton} />\n    </Modal.Actions>\n  </Modal>\n)};"]},"metadata":{},"sourceType":"module"}