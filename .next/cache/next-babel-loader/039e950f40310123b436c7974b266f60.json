{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport SignInLayout from '../components/SignInLayout';\nimport MyGrid from '../components/MyGrid';\nimport { Form, Button } from 'semantic-ui-react';\nimport UserContext from '../components/UserContext';\nimport { useState, useContext } from 'react';\nimport axios from 'axios';\nimport router from 'next/router';\nexport default (function (props) {\n  ///const { signIn } = useContext(UserContext);\n  var _useState = useState({\n    color: 'grey',\n    body: 'Not registered yet? Contact your admin at email@example.com to create your account.'\n  }),\n      message = _useState[0],\n      setMessage = _useState[1];\n\n  var _useState2 = useState({\n    user: '',\n    password: ''\n  }),\n      login = _useState2[0],\n      setLogin = _useState2[1];\n\n  var handleSubmit = function handleSubmit(event) {\n    var response, newObj;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.post('/login', login));\n\n          case 4:\n            response = _context.sent;\n            console.log(response.data.data); //signIn(user, id, admin)\n            //need to send the admin flag to users\n\n            router.push({\n              pathname: response.data.redirectUrl,\n              state: response.data.data\n            });\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n            if (_context.t0.response.status === 401) {\n              newObj = {\n                body: 'Incorrect user or password',\n                color: 'red'\n              };\n              setMessage(_objectSpread({}, message, {}, newObj));\n            } else {\n              console.log(_context.t0.response);\n            }\n\n          case 13:\n            //done after data is sent for authentication\n            ///this clears object\n            setLogin({\n              user: '',\n              password: ''\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n\n  var handleLoginChange = function handleLoginChange(event) {\n    var newObj = _defineProperty({}, event.target.name, event.target.value);\n\n    setLogin(_objectSpread({}, login, {}, newObj));\n  };\n\n  return __jsx(SignInLayout, null, __jsx(MyGrid, {\n    columnNum: 2,\n    header: \"Login\",\n    body: message.body,\n    color: message.color\n  }, __jsx(Form, {\n    size: \"large\"\n  }, __jsx(Form.Input, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Username\",\n    onChange: handleLoginChange,\n    name: \"user\",\n    type: \"text\",\n    value: login.user\n  }), __jsx(Form.Input, {\n    fluid: true,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    placeholder: \"Password\",\n    type: \"password\",\n    onChange: handleLoginChange,\n    name: \"password\",\n    value: login.password\n  }), __jsx(Button, {\n    type: \"submit\",\n    size: \"large\",\n    onClick: handleSubmit\n  }, \"Log In\"))));\n});","map":{"version":3,"sources":["/Users/meatripoli/ClassWork/FinalProject/pages/login.js"],"names":["SignInLayout","MyGrid","Form","Button","UserContext","useState","useContext","axios","router","props","color","body","message","setMessage","user","password","login","setLogin","handleSubmit","event","preventDefault","post","response","console","log","data","push","pathname","redirectUrl","state","status","newObj","handleLoginChange","target","name","value"],"mappings":"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","sourcesContent":["import SignInLayout from '../components/SignInLayout';\nimport MyGrid from '../components/MyGrid';\nimport {Form, Button} from 'semantic-ui-react';\nimport UserContext from '../components/UserContext';\nimport {useState,useContext} from 'react';\nimport axios from 'axios';\nimport router from 'next/router'\n\nexport default (props) => {\n  ///const { signIn } = useContext(UserContext);\n  const [message,setMessage]=useState({\n    color:'grey',\n    body:'Not registered yet? Contact your admin at email@example.com to create your account.'\n  })\n  const [login,setLogin] = useState({\n    user: '',\n    password: ''\n  })\n  const handleSubmit = async (event)=>{\n    event.preventDefault();\n    try{\n      let response = await axios.post('/login',login)\n      console.log(response.data.data);\n      //signIn(user, id, admin)\n      //need to send the admin flag to users\n      router.push({ pathname: response.data.redirectUrl, state: response.data.data})\n    }\n    catch(e){\n      console.log(e)\n      if(e.response.status===401){\n        let newObj = {body: 'Incorrect user or password',color:'red'};\n        setMessage({...message,...newObj})\n      }\n      else{\n        console.log(e.response)\n      }\n    }\n    //done after data is sent for authentication\n    ///this clears object\n    setLogin({\n      user: '',\n      password: ''\n    });\n  };\n\n  const handleLoginChange = (event)=>{\n    let newObj = {[event.target.name]: event.target.value};\n    setLogin({...login,...newObj});\n  }\n\n  return (<SignInLayout>\n    <MyGrid \n        columnNum = {2} \n        header='Login'\n        body={message.body}\n        color={message.color}\n    >\n        <Form size=\"large\">\n            <Form.Input\n                fluid\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                onChange={handleLoginChange}\n                name='user'\n                type='text'\n                value={login.user}\n            />\n            <Form.Input\n                fluid\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                type=\"password\"\n                onChange={handleLoginChange}\n                name='password'\n                value={login.password}\n            />\n            <Button type='submit' size=\"large\" onClick={handleSubmit}>Log In</Button>\n        </Form>\n    </MyGrid>\n  </SignInLayout>);\n};"]},"metadata":{},"sourceType":"module"}